{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\VS Code\\\\CryptographyWebApp\\\\frontend\\\\src\\\\TranspositionPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TranspositionPage() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const validateInputs = () => {\n    if (!plaintext && !ciphertext) {\n      setError(\"Please enter text to encrypt or decrypt\");\n      return false;\n    }\n    if (!key || key.length < 2) {\n      setError(\"Key must be at least 2 characters long\");\n      return false;\n    }\n    return true;\n  };\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/encrypt/transposition\", {\n        plaintext,\n        key\n      });\n      setCiphertext(response.data.ciphertext);\n\n      // Create visualization\n      const numRows = response.data.numRows;\n      const numCols = response.data.numCols;\n      const matrix = Array(numRows).fill().map(() => Array(numCols).fill(\"\"));\n      let index = 0;\n\n      // Fill the matrix row by row\n      for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < numCols; col++) {\n          if (index < plaintext.length) {\n            matrix[row][col] = plaintext[index++];\n          } else {\n            matrix[row][col] = \"_\";\n          }\n        }\n      }\n      setVisualization({\n        original: matrix,\n        encrypted: response.data.ciphertext,\n        originalLength: response.data.originalLength,\n        paddedLength: response.data.paddedLength,\n        key: key,\n        numRows: numRows,\n        numCols: numCols,\n        isDecryption: false\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Encryption error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Text encryption failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/decrypt/transposition\", {\n        ciphertext,\n        key\n      });\n      setDecryptedText(response.data.plaintext);\n\n      // Create visualization for decryption\n      const numRows = key.length;\n      const numCols = Math.ceil(ciphertext.length / numRows);\n      const matrix = Array(numRows).fill().map(() => Array(numCols).fill(\"\"));\n      let index = 0;\n\n      // Fill the matrix column by column\n      for (let col = 0; col < numCols; col++) {\n        for (let row = 0; row < numRows; row++) {\n          if (index < ciphertext.length) {\n            matrix[row][col] = ciphertext[index++];\n          }\n        }\n      }\n      setVisualization({\n        original: matrix,\n        encrypted: ciphertext,\n        decrypted: response.data.plaintext,\n        originalLength: ciphertext.length,\n        paddedLength: ciphertext.length,\n        key: key,\n        numRows: numRows,\n        numCols: numCols,\n        isDecryption: true\n      });\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Decryption error:\", err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Text decryption failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateKey = () => {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    const length = Math.floor(Math.random() * 5) + 3; // Random length between 3 and 7\n    let randomKey = \"\";\n    for (let i = 0; i < length; i++) {\n      randomKey += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    setKey(randomKey);\n    setError(\"\");\n  };\n  const handleFileUpload = e => setFile(e.target.files[0]);\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/encrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"encrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/decrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"decrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-light text-center\",\n      children: \"Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-secondary text-center\",\n      children: \"A transposition cipher rearranges the letters of the plaintext according to a numeric key. The cipher is case-sensitive and preserves the original text formatting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"text\"),\n          children: \"Text Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"file\"),\n          children: \"File Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger alert-dismissible fade show\",\n      role: \"alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setError(\"\"),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), activeTab === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 border-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plaintext\",\n            className: \"form-label text-light\",\n            children: \"Plaintext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plaintext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to encrypt\",\n            value: plaintext,\n            onChange: e => setPlaintext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Key (text)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: encryptText,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Ciphertext:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: ciphertext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), visualization && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-light\",\n            children: \"Block Transposition Cipher Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-dark rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mb-2\",\n              children: [visualization.isDecryption ? \"Decryption\" : \"Encryption\", \" \", \"Matrix (Key: \", visualization.key, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-visualization\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-header\",\n                children: Array.from({\n                  length: visualization.numCols\n                }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-header-cell\",\n                  children: i + 1\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), visualization.original.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-row\",\n                children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-cell\",\n                  children: cell === \" \" ? \"␣\" : cell === \"_\" ? \"_\" : cell || \" \"\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 27\n                }, this))\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-3\",\n              children: [\"Original Length: \", visualization.originalLength, \" | Padded Length: \", visualization.paddedLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-2\",\n              children: [\"Reading Direction:\", \" \", visualization.isDecryption ? \"Row-wise (left to right)\" : \"Column-wise (top to bottom)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), visualization.isDecryption && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-2\",\n              children: [\"Decrypted Text: \", visualization.decrypted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-warning\",\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ciphertext\",\n            className: \"form-label text-light\",\n            children: \"Ciphertext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ciphertext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to decrypt\",\n            value: ciphertext,\n            onChange: e => setCiphertext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Key (text)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: decryptText,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Decrypted Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: decryptedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), activeTab === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Key (text)\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: generateKey,\n          children: \"\\uD83D\\uDD10 Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: encryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), \"Encrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          onClick: decryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), \"Decrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress my-3 w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n          style: {\n            width: `${downloadProgress}%`\n          },\n          children: [downloadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }, this), fileResult && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileResult.url,\n        className: \"btn btn-primary mt-3\",\n        download: fileResult.filename,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }, this), \"Download Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(TranspositionPage, \"xZi0Q9CsX6u49RzCVqD/1iH7ATc=\");\n_c = TranspositionPage;\nvar _c;\n$RefreshReg$(_c, \"TranspositionPage\");","map":{"version":3,"names":["useState","axios","Loader2","FileText","Download","jsxDEV","_jsxDEV","Fragment","_Fragment","TranspositionPage","_s","activeTab","setActiveTab","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decryptedText","setDecryptedText","error","setError","isLoading","setIsLoading","file","setFile","fileResult","setFileResult","downloadProgress","setDownloadProgress","isDownloading","setIsDownloading","visualization","setVisualization","validateInputs","length","encryptText","response","post","data","numRows","numCols","matrix","Array","fill","map","index","row","col","original","encrypted","originalLength","paddedLength","isDecryption","err","_err$response","_err$response$data","console","decryptText","Math","ceil","decrypted","_err$response2","_err$response2$data","generateKey","characters","floor","random","randomKey","i","charAt","handleFileUpload","e","target","files","encryptFile","formData","FormData","append","res","responseType","onDownloadProgress","progressEvent","percent","round","loaded","total","blob","Blob","type","headers","url","URL","createObjectURL","filename","name","decryptFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","htmlFor","id","placeholder","value","onChange","rows","disabled","size","from","_","cell","j","style","width","href","download","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/VS Code/CryptographyWebApp/frontend/src/TranspositionPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Loader2, FileText, Download } from \"lucide-react\";\r\n\r\nexport default function TranspositionPage() {\r\n  const [activeTab, setActiveTab] = useState(\"text\");\r\n  const [plaintext, setPlaintext] = useState(\"\");\r\n  const [key, setKey] = useState(\"\");\r\n  const [ciphertext, setCiphertext] = useState(\"\");\r\n  const [decryptedText, setDecryptedText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [fileResult, setFileResult] = useState(\"\");\r\n  const [downloadProgress, setDownloadProgress] = useState(0);\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n  const [visualization, setVisualization] = useState(null);\r\n\r\n  const validateInputs = () => {\r\n    if (!plaintext && !ciphertext) {\r\n      setError(\"Please enter text to encrypt or decrypt\");\r\n      return false;\r\n    }\r\n    if (!key || key.length < 2) {\r\n      setError(\"Key must be at least 2 characters long\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const encryptText = async () => {\r\n    if (!validateInputs()) return;\r\n\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/encrypt/transposition\",\r\n        {\r\n          plaintext,\r\n          key,\r\n        }\r\n      );\r\n      setCiphertext(response.data.ciphertext);\r\n\r\n      // Create visualization\r\n      const numRows = response.data.numRows;\r\n      const numCols = response.data.numCols;\r\n      const matrix = Array(numRows)\r\n        .fill()\r\n        .map(() => Array(numCols).fill(\"\"));\r\n      let index = 0;\r\n\r\n      // Fill the matrix row by row\r\n      for (let row = 0; row < numRows; row++) {\r\n        for (let col = 0; col < numCols; col++) {\r\n          if (index < plaintext.length) {\r\n            matrix[row][col] = plaintext[index++];\r\n          } else {\r\n            matrix[row][col] = \"_\";\r\n          }\r\n        }\r\n      }\r\n\r\n      setVisualization({\r\n        original: matrix,\r\n        encrypted: response.data.ciphertext,\r\n        originalLength: response.data.originalLength,\r\n        paddedLength: response.data.paddedLength,\r\n        key: key,\r\n        numRows: numRows,\r\n        numCols: numCols,\r\n        isDecryption: false,\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Encryption error:\", err);\r\n      setError(\r\n        err.response?.data?.error || \"Text encryption failed. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const decryptText = async () => {\r\n    if (!validateInputs()) return;\r\n\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/decrypt/transposition\",\r\n        {\r\n          ciphertext,\r\n          key,\r\n        }\r\n      );\r\n      setDecryptedText(response.data.plaintext);\r\n\r\n      // Create visualization for decryption\r\n      const numRows = key.length;\r\n      const numCols = Math.ceil(ciphertext.length / numRows);\r\n      const matrix = Array(numRows)\r\n        .fill()\r\n        .map(() => Array(numCols).fill(\"\"));\r\n      let index = 0;\r\n\r\n      // Fill the matrix column by column\r\n      for (let col = 0; col < numCols; col++) {\r\n        for (let row = 0; row < numRows; row++) {\r\n          if (index < ciphertext.length) {\r\n            matrix[row][col] = ciphertext[index++];\r\n          }\r\n        }\r\n      }\r\n\r\n      setVisualization({\r\n        original: matrix,\r\n        encrypted: ciphertext,\r\n        decrypted: response.data.plaintext,\r\n        originalLength: ciphertext.length,\r\n        paddedLength: ciphertext.length,\r\n        key: key,\r\n        numRows: numRows,\r\n        numCols: numCols,\r\n        isDecryption: true,\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Decryption error:\", err);\r\n      setError(\r\n        err.response?.data?.error || \"Text decryption failed. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateKey = () => {\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n    const length = Math.floor(Math.random() * 5) + 3; // Random length between 3 and 7\r\n    let randomKey = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n      randomKey += characters.charAt(\r\n        Math.floor(Math.random() * characters.length)\r\n      );\r\n    }\r\n    setKey(randomKey);\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleFileUpload = (e) => setFile(e.target.files[0]);\r\n\r\n  const encryptFile = async () => {\r\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"key\", key);\r\n    try {\r\n      setIsDownloading(true);\r\n      setDownloadProgress(0);\r\n\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/encrypt-file/transposition\",\r\n        formData,\r\n        {\r\n          responseType: \"blob\",\r\n          onDownloadProgress: (progressEvent) => {\r\n            const percent = Math.round(\r\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\r\n            );\r\n            setDownloadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const url = URL.createObjectURL(blob);\r\n      setFileResult({ url, filename: \"encrypted_\" + file.name });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"File encryption failed.\");\r\n    } finally {\r\n      setIsDownloading(false);\r\n      setDownloadProgress(0);\r\n    }\r\n  };\r\n\r\n  const decryptFile = async () => {\r\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"key\", key);\r\n    try {\r\n      setIsDownloading(true);\r\n      setDownloadProgress(0);\r\n\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/decrypt-file/transposition\",\r\n        formData,\r\n        {\r\n          responseType: \"blob\",\r\n          onDownloadProgress: (progressEvent) => {\r\n            const percent = Math.round(\r\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\r\n            );\r\n            setDownloadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const url = URL.createObjectURL(blob);\r\n      setFileResult({ url, filename: \"decrypted_\" + file.name });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"File decryption failed.\");\r\n    } finally {\r\n      setIsDownloading(false);\r\n      setDownloadProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1 className=\"text-light text-center\">Transposition Cipher</h1>\r\n      <p className=\"text-secondary text-center\">\r\n        A transposition cipher rearranges the letters of the plaintext according\r\n        to a numeric key. The cipher is case-sensitive and preserves the\r\n        original text formatting.\r\n      </p>\r\n\r\n      <div className=\"d-flex justify-content-center mb-4\">\r\n        <div className=\"btn-group\">\r\n          <button\r\n            className={`btn ${\r\n              activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveTab(\"text\")}\r\n          >\r\n            Text Encryption\r\n          </button>\r\n          <button\r\n            className={`btn ${\r\n              activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveTab(\"file\")}\r\n          >\r\n            File Encryption\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div\r\n          className=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            onClick={() => setError(\"\")}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"text\" && (\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-6 border-end\">\r\n            <h4 className=\"text-success\">Encrypt</h4>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"plaintext\" className=\"form-label text-light\">\r\n                Plaintext\r\n              </label>\r\n              <textarea\r\n                id=\"plaintext\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter text to encrypt\"\r\n                value={plaintext}\r\n                onChange={(e) => setPlaintext(e.target.value)}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Key (text)\"\r\n                value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-success\" onClick={generateKey}>\r\n                🔐 Generate\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-success\"\r\n              onClick={encryptText}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Loader2 className=\"me-2\" size={20} />\r\n                  Encrypting...\r\n                </>\r\n              ) : (\r\n                \"Encrypt\"\r\n              )}\r\n            </button>\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label text-light\">Ciphertext:</label>\r\n              <div className=\"p-2 bg-dark rounded\">\r\n                <code className=\"text-light\">{ciphertext}</code>\r\n              </div>\r\n            </div>\r\n\r\n            {visualization && (\r\n              <div className=\"mt-4\">\r\n                <h5 className=\"text-light\">\r\n                  Block Transposition Cipher Visualization\r\n                </h5>\r\n                <div className=\"p-3 bg-dark rounded\">\r\n                  <p className=\"text-light mb-2\">\r\n                    {visualization.isDecryption ? \"Decryption\" : \"Encryption\"}{\" \"}\r\n                    Matrix (Key: {visualization.key}):\r\n                  </p>\r\n                  <div className=\"matrix-visualization\">\r\n                    <div className=\"matrix-header\">\r\n                      {Array.from({ length: visualization.numCols }, (_, i) => (\r\n                        <div key={i} className=\"matrix-header-cell\">\r\n                          {i + 1}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    {visualization.original.map((row, i) => (\r\n                      <div key={i} className=\"matrix-row\">\r\n                        {row.map((cell, j) => (\r\n                          <div key={j} className=\"matrix-cell\">\r\n                            {cell === \" \"\r\n                              ? \"␣\"\r\n                              : cell === \"_\"\r\n                              ? \"_\"\r\n                              : cell || \" \"}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"text-light mt-3\">\r\n                    Original Length: {visualization.originalLength} | Padded\r\n                    Length: {visualization.paddedLength}\r\n                  </p>\r\n                  <p className=\"text-light mt-2\">\r\n                    Reading Direction:{\" \"}\r\n                    {visualization.isDecryption\r\n                      ? \"Row-wise (left to right)\"\r\n                      : \"Column-wise (top to bottom)\"}\r\n                  </p>\r\n                  {visualization.isDecryption && (\r\n                    <p className=\"text-light mt-2\">\r\n                      Decrypted Text: {visualization.decrypted}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <h4 className=\"text-warning\">Decrypt</h4>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"ciphertext\" className=\"form-label text-light\">\r\n                Ciphertext\r\n              </label>\r\n              <textarea\r\n                id=\"ciphertext\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter text to decrypt\"\r\n                value={ciphertext}\r\n                onChange={(e) => setCiphertext(e.target.value)}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Key (text)\"\r\n                value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-success\" onClick={generateKey}>\r\n                🔐 Generate\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              onClick={decryptText}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Loader2 className=\"me-2\" size={20} />\r\n                  Decrypting...\r\n                </>\r\n              ) : (\r\n                \"Decrypt\"\r\n              )}\r\n            </button>\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label text-light\">Decrypted Text:</label>\r\n              <div className=\"p-2 bg-dark rounded\">\r\n                <code className=\"text-light\">{decryptedText}</code>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"file\" && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={handleFileUpload}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Key (text)\"\r\n              value={key}\r\n              onChange={(e) => setKey(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-success\" onClick={generateKey}>\r\n              🔐 Generate\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex gap-2\">\r\n            <button className=\"btn btn-outline-success\" onClick={encryptFile}>\r\n              <FileText className=\"me-2\" size={20} />\r\n              Encrypt File\r\n            </button>\r\n            <button className=\"btn btn-outline-warning\" onClick={decryptFile}>\r\n              <FileText className=\"me-2\" size={20} />\r\n              Decrypt File\r\n            </button>\r\n          </div>\r\n          {isDownloading && (\r\n            <div className=\"progress my-3 w-100\">\r\n              <div\r\n                className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\r\n                style={{ width: `${downloadProgress}%` }}\r\n              >\r\n                {downloadProgress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n          {fileResult && (\r\n            <a\r\n              href={fileResult.url}\r\n              className=\"btn btn-primary mt-3\"\r\n              download={fileResult.filename}\r\n            >\r\n              <Download className=\"me-2\" size={20} />\r\n              Download Result\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
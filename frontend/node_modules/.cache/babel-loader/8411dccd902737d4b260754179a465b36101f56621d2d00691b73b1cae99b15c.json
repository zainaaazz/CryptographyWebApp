{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\VS Code\\\\CryptographyWebApp\\\\frontend\\\\src\\\\TranspositionPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TranspositionPage() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    if (!/^[a-zA-Z]+$/.test(key)) {\n      setError(\"Keyword must contain only letters\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique letters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      setError(\"\");\n      const response = await fetch(\"http://localhost:5000/encrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          plaintext: plaintext.trim(),\n          key: key.trim()\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to encrypt text\");\n      }\n      if (!data.ciphertext) {\n        throw new Error(\"No ciphertext received from server\");\n      }\n      setCiphertext(data.ciphertext);\n      setError(\"\");\n\n      // Create visualization\n      const numRows = Math.ceil(plaintext.length / key.length);\n      const matrix = Array(numRows).fill().map(() => Array(key.length).fill(\"_\"));\n      let index = 0;\n\n      // Fill the matrix row by row\n      for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < key.length; col++) {\n          if (index < plaintext.length) {\n            matrix[row][col] = plaintext[index++];\n          }\n        }\n      }\n      setVisualization({\n        matrix,\n        columnOrder: key.toUpperCase().split(\"\"),\n        originalLength: plaintext.length,\n        paddedLength: numRows * key.length,\n        key: key,\n        isEncryption: true\n      });\n    } catch (err) {\n      console.error(\"Encryption error:\", err);\n      setError(err.message || \"Failed to encrypt text. Please check your input and try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      setError(\"\");\n      const response = await fetch(\"http://localhost:5000/decrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ciphertext: ciphertext.trim(),\n          key: key.trim()\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to decrypt text\");\n      }\n      if (!data.plaintext) {\n        throw new Error(\"No plaintext received from server\");\n      }\n      setDecryptedText(data.plaintext);\n      setError(\"\");\n\n      // Create visualization for decryption\n      const numRows = Math.ceil(ciphertext.length / key.length);\n      const matrix = Array(numRows).fill().map(() => Array(key.length).fill(\"_\"));\n      let index = 0;\n\n      // Fill the matrix column by column\n      for (let col = 0; col < key.length; col++) {\n        for (let row = 0; row < numRows; row++) {\n          if (index < ciphertext.length) {\n            matrix[row][col] = ciphertext[index++];\n          }\n        }\n      }\n      setVisualization({\n        matrix,\n        columnOrder: key.toUpperCase().split(\"\"),\n        originalLength: ciphertext.length,\n        paddedLength: ciphertext.length,\n        key: key,\n        isDecryption: true\n      });\n    } catch (err) {\n      console.error(\"Decryption error:\", err);\n      setError(err.message || \"Failed to decrypt text. Please check your input and try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const generateKey = () => {\n    // Generate a random keyword with at least 2 unique characters\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const length = Math.floor(Math.random() * 4) + 3; // Random length between 3 and 6\n    let keyword = \"\";\n\n    // Ensure at least 2 unique characters\n    const firstChar = characters.charAt(Math.floor(Math.random() * characters.length));\n    const secondChar = characters.charAt(Math.floor(Math.random() * characters.length));\n    keyword = firstChar + secondChar;\n\n    // Add remaining characters\n    for (let i = 2; i < length; i++) {\n      keyword += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    setKey(keyword);\n    setError(\"\");\n  };\n  const handleFileUpload = e => setFile(e.target.files[0]);\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(`${window.location.protocol}//${window.location.hostname}:5000/encrypt-file/transposition`, formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"encrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      console.error(\"File encryption error:\", err);\n      setError(\"File encryption failed. Please check your input and try again.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(`${window.location.protocol}//${window.location.hostname}:5000/decrypt-file/transposition`, formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"decrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      console.error(\"File decryption error:\", err);\n      setError(\"File decryption failed. Please check your input and try again.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"The Transposition Cipher rearranges the letters of the plaintext according to a keyword. The process consists of three parts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"process-steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Preprocessing:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), \" Replace spaces with underscores and process the keyword\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Matrix Creation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), \" Create a matrix based on the keyword length\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Text Transformation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), \" Read the matrix in the order specified by the keyword\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"text\"),\n          children: \"Text Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"file\"),\n          children: \"File Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger alert-dismissible fade show\",\n      role: \"alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setError(\"\"),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this), activeTab === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 border-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plaintext\",\n            className: \"form-label text-light\",\n            children: \"Plaintext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plaintext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to encrypt\",\n            value: plaintext,\n            onChange: e => setPlaintext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Keyword\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: encryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Ciphertext:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: ciphertext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), visualization && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transposition Cipher Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"1. Preprocessing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preprocessing-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Original text: \", plaintext || \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Processed text: \", (plaintext || \"\").replace(/\\s+/g, \"_\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Keyword: \", (visualization === null || visualization === void 0 ? void 0 : visualization.key) || \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Column order (original):\", \" \", ((visualization === null || visualization === void 0 ? void 0 : visualization.columnOrder) || []).join(\" \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Column numbers:\", \" \", ((visualization === null || visualization === void 0 ? void 0 : visualization.columnNumbers) || []).join(\" \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"2. Matrix Creation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-visualization\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-header\",\n                children: ((visualization === null || visualization === void 0 ? void 0 : visualization.columnOrder) || []).map((char, index) => {\n                  var _visualization$column, _visualization$column2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"matrix-cell header\",\n                    children: [char, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"column-number\",\n                      children: (_visualization$column = visualization === null || visualization === void 0 ? void 0 : (_visualization$column2 = visualization.columnNumbers) === null || _visualization$column2 === void 0 ? void 0 : _visualization$column2[index]) !== null && _visualization$column !== void 0 ? _visualization$column : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), ((visualization === null || visualization === void 0 ? void 0 : visualization.matrix) || []).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-row\",\n                children: (row || []).map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-cell\",\n                  children: cell === \"_\" ? \" _\" : cell\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 27\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-step\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"3. Text Transformation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transformation-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Reading direction:\", \" \", visualization !== null && visualization !== void 0 && visualization.isDecryption ? \"Row-wise\" : \"Column-wise in original order\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Original length: \", (visualization === null || visualization === void 0 ? void 0 : visualization.originalLength) || 0, \" \", \"characters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Padded length: \", (visualization === null || visualization === void 0 ? void 0 : visualization.paddedLength) || 0, \" \", \"characters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Result:\", \" \", visualization !== null && visualization !== void 0 && visualization.isDecryption ? decryptedText : ciphertext]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-warning\",\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ciphertext\",\n            className: \"form-label text-light\",\n            children: \"Ciphertext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ciphertext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to decrypt\",\n            value: ciphertext,\n            onChange: e => setCiphertext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Key (text)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: decryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Decrypted Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: decryptedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), activeTab === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Key (text)\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: generateKey,\n          children: \"\\uD83D\\uDD10 Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: encryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), \"Encrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          onClick: decryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), \"Decrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress my-3 w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n          style: {\n            width: `${downloadProgress}%`\n          },\n          children: [downloadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }, this), fileResult && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileResult.url,\n        className: \"btn btn-primary mt-3\",\n        download: fileResult.filename,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 15\n        }, this), \"Download Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s(TranspositionPage, \"J0gfUDvHmItKeXiC2d+tBz8G6EE=\");\n_c = TranspositionPage;\nvar _c;\n$RefreshReg$(_c, \"TranspositionPage\");","map":{"version":3,"names":["useState","axios","Loader2","FileText","Download","jsxDEV","_jsxDEV","Fragment","_Fragment","TranspositionPage","_s","activeTab","setActiveTab","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decryptedText","setDecryptedText","error","setError","isLoading","setIsLoading","file","setFile","fileResult","setFileResult","downloadProgress","setDownloadProgress","isDownloading","setIsDownloading","visualization","setVisualization","isProcessing","setIsProcessing","validateInputs","trim","test","uniqueChars","Set","toUpperCase","split","size","encryptText","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","numRows","Math","ceil","length","matrix","Array","fill","map","index","row","col","columnOrder","originalLength","paddedLength","isEncryption","err","console","message","decryptText","isDecryption","generateKey","characters","floor","random","keyword","firstChar","charAt","secondChar","i","handleFileUpload","e","target","files","encryptFile","formData","FormData","append","res","post","window","location","protocol","hostname","responseType","onDownloadProgress","progressEvent","percent","round","loaded","total","blob","Blob","type","url","URL","createObjectURL","filename","name","decryptFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","htmlFor","id","placeholder","value","onChange","rows","disabled","replace","join","columnNumbers","char","_visualization$column","_visualization$column2","rowIndex","cell","colIndex","style","width","href","download","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/VS Code/CryptographyWebApp/frontend/src/TranspositionPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Loader2, FileText, Download } from \"lucide-react\";\r\n\r\nexport default function TranspositionPage() {\r\n  const [activeTab, setActiveTab] = useState(\"text\");\r\n  const [plaintext, setPlaintext] = useState(\"\");\r\n  const [key, setKey] = useState(\"\");\r\n  const [ciphertext, setCiphertext] = useState(\"\");\r\n  const [decryptedText, setDecryptedText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [fileResult, setFileResult] = useState(\"\");\r\n  const [downloadProgress, setDownloadProgress] = useState(0);\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n  const [visualization, setVisualization] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const validateInputs = () => {\r\n    if (!plaintext.trim() && !file) {\r\n      setError(\"Please enter text or upload a file\");\r\n      return false;\r\n    }\r\n    if (!key.trim()) {\r\n      setError(\"Please enter a keyword\");\r\n      return false;\r\n    }\r\n    if (!/^[a-zA-Z]+$/.test(key)) {\r\n      setError(\"Keyword must contain only letters\");\r\n      return false;\r\n    }\r\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\r\n    if (uniqueChars.size < 2) {\r\n      setError(\"Keyword must have at least 2 unique letters\");\r\n      return false;\r\n    }\r\n    setError(\"\");\r\n    return true;\r\n  };\r\n\r\n  const encryptText = async () => {\r\n    if (!validateInputs()) return;\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setError(\"\");\r\n\r\n      const response = await fetch(\r\n        \"http://localhost:5000/encrypt/transposition\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            plaintext: plaintext.trim(),\r\n            key: key.trim(),\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to encrypt text\");\r\n      }\r\n\r\n      if (!data.ciphertext) {\r\n        throw new Error(\"No ciphertext received from server\");\r\n      }\r\n\r\n      setCiphertext(data.ciphertext);\r\n      setError(\"\");\r\n\r\n      // Create visualization\r\n      const numRows = Math.ceil(plaintext.length / key.length);\r\n      const matrix = Array(numRows)\r\n        .fill()\r\n        .map(() => Array(key.length).fill(\"_\"));\r\n      let index = 0;\r\n\r\n      // Fill the matrix row by row\r\n      for (let row = 0; row < numRows; row++) {\r\n        for (let col = 0; col < key.length; col++) {\r\n          if (index < plaintext.length) {\r\n            matrix[row][col] = plaintext[index++];\r\n          }\r\n        }\r\n      }\r\n\r\n      setVisualization({\r\n        matrix,\r\n        columnOrder: key.toUpperCase().split(\"\"),\r\n        originalLength: plaintext.length,\r\n        paddedLength: numRows * key.length,\r\n        key: key,\r\n        isEncryption: true,\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Encryption error:\", err);\r\n      setError(\r\n        err.message ||\r\n          \"Failed to encrypt text. Please check your input and try again.\"\r\n      );\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const decryptText = async () => {\r\n    if (!validateInputs()) return;\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setError(\"\");\r\n\r\n      const response = await fetch(\r\n        \"http://localhost:5000/decrypt/transposition\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            ciphertext: ciphertext.trim(),\r\n            key: key.trim(),\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to decrypt text\");\r\n      }\r\n\r\n      if (!data.plaintext) {\r\n        throw new Error(\"No plaintext received from server\");\r\n      }\r\n\r\n      setDecryptedText(data.plaintext);\r\n      setError(\"\");\r\n\r\n      // Create visualization for decryption\r\n      const numRows = Math.ceil(ciphertext.length / key.length);\r\n      const matrix = Array(numRows)\r\n        .fill()\r\n        .map(() => Array(key.length).fill(\"_\"));\r\n      let index = 0;\r\n\r\n      // Fill the matrix column by column\r\n      for (let col = 0; col < key.length; col++) {\r\n        for (let row = 0; row < numRows; row++) {\r\n          if (index < ciphertext.length) {\r\n            matrix[row][col] = ciphertext[index++];\r\n          }\r\n        }\r\n      }\r\n\r\n      setVisualization({\r\n        matrix,\r\n        columnOrder: key.toUpperCase().split(\"\"),\r\n        originalLength: ciphertext.length,\r\n        paddedLength: ciphertext.length,\r\n        key: key,\r\n        isDecryption: true,\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Decryption error:\", err);\r\n      setError(\r\n        err.message ||\r\n          \"Failed to decrypt text. Please check your input and try again.\"\r\n      );\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const generateKey = () => {\r\n    // Generate a random keyword with at least 2 unique characters\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const length = Math.floor(Math.random() * 4) + 3; // Random length between 3 and 6\r\n    let keyword = \"\";\r\n\r\n    // Ensure at least 2 unique characters\r\n    const firstChar = characters.charAt(\r\n      Math.floor(Math.random() * characters.length)\r\n    );\r\n    const secondChar = characters.charAt(\r\n      Math.floor(Math.random() * characters.length)\r\n    );\r\n    keyword = firstChar + secondChar;\r\n\r\n    // Add remaining characters\r\n    for (let i = 2; i < length; i++) {\r\n      keyword += characters.charAt(\r\n        Math.floor(Math.random() * characters.length)\r\n      );\r\n    }\r\n\r\n    setKey(keyword);\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleFileUpload = (e) => setFile(e.target.files[0]);\r\n\r\n  const encryptFile = async () => {\r\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"key\", key);\r\n    try {\r\n      setIsDownloading(true);\r\n      setDownloadProgress(0);\r\n\r\n      const res = await axios.post(\r\n        `${window.location.protocol}//${window.location.hostname}:5000/encrypt-file/transposition`,\r\n        formData,\r\n        {\r\n          responseType: \"blob\",\r\n          onDownloadProgress: (progressEvent) => {\r\n            const percent = Math.round(\r\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\r\n            );\r\n            setDownloadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const url = URL.createObjectURL(blob);\r\n      setFileResult({ url, filename: \"encrypted_\" + file.name });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"File encryption error:\", err);\r\n      setError(\r\n        \"File encryption failed. Please check your input and try again.\"\r\n      );\r\n    } finally {\r\n      setIsDownloading(false);\r\n      setDownloadProgress(0);\r\n    }\r\n  };\r\n\r\n  const decryptFile = async () => {\r\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"key\", key);\r\n    try {\r\n      setIsDownloading(true);\r\n      setDownloadProgress(0);\r\n\r\n      const res = await axios.post(\r\n        `${window.location.protocol}//${window.location.hostname}:5000/decrypt-file/transposition`,\r\n        formData,\r\n        {\r\n          responseType: \"blob\",\r\n          onDownloadProgress: (progressEvent) => {\r\n            const percent = Math.round(\r\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\r\n            );\r\n            setDownloadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const url = URL.createObjectURL(blob);\r\n      setFileResult({ url, filename: \"decrypted_\" + file.name });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"File decryption error:\", err);\r\n      setError(\r\n        \"File decryption failed. Please check your input and try again.\"\r\n      );\r\n    } finally {\r\n      setIsDownloading(false);\r\n      setDownloadProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <h1>Transposition Cipher</h1>\r\n      <p className=\"description\">\r\n        The Transposition Cipher rearranges the letters of the plaintext\r\n        according to a keyword. The process consists of three parts:\r\n      </p>\r\n      <ol className=\"process-steps\">\r\n        <li>\r\n          <strong>Preprocessing:</strong> Replace spaces with underscores and\r\n          process the keyword\r\n        </li>\r\n        <li>\r\n          <strong>Matrix Creation:</strong> Create a matrix based on the keyword\r\n          length\r\n        </li>\r\n        <li>\r\n          <strong>Text Transformation:</strong> Read the matrix in the order\r\n          specified by the keyword\r\n        </li>\r\n      </ol>\r\n\r\n      <div className=\"d-flex justify-content-center mb-4\">\r\n        <div className=\"btn-group\">\r\n          <button\r\n            className={`btn ${\r\n              activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveTab(\"text\")}\r\n          >\r\n            Text Encryption\r\n          </button>\r\n          <button\r\n            className={`btn ${\r\n              activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveTab(\"file\")}\r\n          >\r\n            File Encryption\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div\r\n          className=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            onClick={() => setError(\"\")}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"text\" && (\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-6 border-end\">\r\n            <h4 className=\"text-success\">Encrypt</h4>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"plaintext\" className=\"form-label text-light\">\r\n                Plaintext\r\n              </label>\r\n              <textarea\r\n                id=\"plaintext\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter text to encrypt\"\r\n                value={plaintext}\r\n                onChange={(e) => setPlaintext(e.target.value)}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Keyword\"\r\n                value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-success\" onClick={generateKey}>\r\n                🔐 Generate\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-success\"\r\n              onClick={encryptText}\r\n              disabled={isProcessing}\r\n            >\r\n              {isProcessing ? (\r\n                <>\r\n                  <Loader2 className=\"me-2\" size={20} />\r\n                  Encrypting...\r\n                </>\r\n              ) : (\r\n                \"Encrypt\"\r\n              )}\r\n            </button>\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label text-light\">Ciphertext:</label>\r\n              <div className=\"p-2 bg-dark rounded\">\r\n                <code className=\"text-light\">{ciphertext}</code>\r\n              </div>\r\n            </div>\r\n\r\n            {visualization && (\r\n              <div className=\"visualization-container\">\r\n                <h3>Transposition Cipher Process</h3>\r\n\r\n                <div className=\"process-step\">\r\n                  <h4>1. Preprocessing</h4>\r\n                  <div className=\"preprocessing-info\">\r\n                    <p>Original text: {plaintext || \"\"}</p>\r\n                    <p>\r\n                      Processed text: {(plaintext || \"\").replace(/\\s+/g, \"_\")}\r\n                    </p>\r\n                    <p>Keyword: {visualization?.key || \"\"}</p>\r\n                    <p>\r\n                      Column order (original):{\" \"}\r\n                      {(visualization?.columnOrder || []).join(\" \")}\r\n                    </p>\r\n                    <p>\r\n                      Column numbers:{\" \"}\r\n                      {(visualization?.columnNumbers || []).join(\" \")}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"process-step\">\r\n                  <h4>2. Matrix Creation</h4>\r\n                  <div className=\"matrix-visualization\">\r\n                    <div className=\"matrix-header\">\r\n                      {(visualization?.columnOrder || []).map((char, index) => (\r\n                        <div key={index} className=\"matrix-cell header\">\r\n                          {char}\r\n                          <div className=\"column-number\">\r\n                            {visualization?.columnNumbers?.[index] ?? \"\"}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    {(visualization?.matrix || []).map((row, rowIndex) => (\r\n                      <div key={rowIndex} className=\"matrix-row\">\r\n                        {(row || []).map((cell, colIndex) => (\r\n                          <div key={colIndex} className=\"matrix-cell\">\r\n                            {cell === \"_\" ? \" _\" : cell}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"process-step\">\r\n                  <h4>3. Text Transformation</h4>\r\n                  <div className=\"transformation-info\">\r\n                    <p>\r\n                      Reading direction:{\" \"}\r\n                      {visualization?.isDecryption\r\n                        ? \"Row-wise\"\r\n                        : \"Column-wise in original order\"}\r\n                    </p>\r\n                    <p>\r\n                      Original length: {visualization?.originalLength || 0}{\" \"}\r\n                      characters\r\n                    </p>\r\n                    <p>\r\n                      Padded length: {visualization?.paddedLength || 0}{\" \"}\r\n                      characters\r\n                    </p>\r\n                    <p>\r\n                      Result:{\" \"}\r\n                      {visualization?.isDecryption ? decryptedText : ciphertext}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <h4 className=\"text-warning\">Decrypt</h4>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"ciphertext\" className=\"form-label text-light\">\r\n                Ciphertext\r\n              </label>\r\n              <textarea\r\n                id=\"ciphertext\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter text to decrypt\"\r\n                value={ciphertext}\r\n                onChange={(e) => setCiphertext(e.target.value)}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Key (text)\"\r\n                value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-success\" onClick={generateKey}>\r\n                🔐 Generate\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              onClick={decryptText}\r\n              disabled={isProcessing}\r\n            >\r\n              {isProcessing ? (\r\n                <>\r\n                  <Loader2 className=\"me-2\" size={20} />\r\n                  Decrypting...\r\n                </>\r\n              ) : (\r\n                \"Decrypt\"\r\n              )}\r\n            </button>\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label text-light\">Decrypted Text:</label>\r\n              <div className=\"p-2 bg-dark rounded\">\r\n                <code className=\"text-light\">{decryptedText}</code>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"file\" && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={handleFileUpload}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Key (text)\"\r\n              value={key}\r\n              onChange={(e) => setKey(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-success\" onClick={generateKey}>\r\n              🔐 Generate\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex gap-2\">\r\n            <button className=\"btn btn-outline-success\" onClick={encryptFile}>\r\n              <FileText className=\"me-2\" size={20} />\r\n              Encrypt File\r\n            </button>\r\n            <button className=\"btn btn-outline-warning\" onClick={decryptFile}>\r\n              <FileText className=\"me-2\" size={20} />\r\n              Decrypt File\r\n            </button>\r\n          </div>\r\n          {isDownloading && (\r\n            <div className=\"progress my-3 w-100\">\r\n              <div\r\n                className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\r\n                style={{ width: `${downloadProgress}%` }}\r\n              >\r\n                {downloadProgress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n          {fileResult && (\r\n            <a\r\n              href={fileResult.url}\r\n              className=\"btn btn-primary mt-3\"\r\n              download={fileResult.filename}\r\n            >\r\n              <Download className=\"me-2\" size={20} />\r\n              Download Result\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\VS Code\\\\CryptographyWebApp\\\\frontend\\\\src\\\\TranspositionPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TranspositionPage() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const validateInputs = () => {\n    if (!plaintext && !ciphertext) {\n      setError(\"Please enter text to encrypt or decrypt\");\n      return false;\n    }\n    if (!key || key < 2) {\n      setError(\"Key must be at least 2\");\n      return false;\n    }\n    return true;\n  };\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/encrypt/transposition\", {\n        plaintext,\n        key: parseInt(key)\n      });\n      setCiphertext(response.data.ciphertext);\n\n      // Create visualization\n      const numRows = Math.ceil(plaintext.length / key);\n      const matrix = Array(numRows).fill().map(() => Array(key).fill(\"\"));\n      let index = 0;\n      for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < key; col++) {\n          if (index < plaintext.length) {\n            matrix[row][col] = plaintext[index++];\n          }\n        }\n      }\n      setVisualization({\n        original: matrix,\n        encrypted: response.data.ciphertext,\n        originalLength: response.data.originalLength,\n        paddedLength: response.data.paddedLength,\n        key: parseInt(key)\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Text encryption failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/decrypt/transposition\", {\n        ciphertext,\n        key: parseInt(key)\n      });\n      setDecryptedText(response.data.plaintext);\n\n      // Create visualization for decryption\n      const numRows = Math.ceil(ciphertext.length / key);\n      const matrix = Array(numRows).fill().map(() => Array(key).fill(\"\"));\n      let index = 0;\n\n      // Fill the matrix column by column (decryption)\n      for (let col = 0; col < key; col++) {\n        for (let row = 0; row < numRows; row++) {\n          if (index < ciphertext.length) {\n            matrix[row][col] = ciphertext[index++];\n          }\n        }\n      }\n      setVisualization({\n        original: matrix,\n        encrypted: ciphertext,\n        decrypted: response.data.plaintext,\n        originalLength: ciphertext.length,\n        paddedLength: ciphertext.length,\n        key: parseInt(key),\n        isDecryption: true\n      });\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Text decryption failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateKey = () => {\n    const randomKey = Math.floor(Math.random() * 8) + 2; // Random key between 2 and 9\n    setKey(randomKey.toString());\n    setError(\"\");\n  };\n  const handleFileUpload = e => setFile(e.target.files[0]);\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/encrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"encrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/decrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"decrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-light text-center\",\n      children: \"Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-secondary text-center\",\n      children: \"A transposition cipher rearranges the letters of the plaintext according to a numeric key. The cipher is case-sensitive and preserves the original text formatting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"text\"),\n          children: \"Text Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"file\"),\n          children: \"File Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger alert-dismissible fade show\",\n      role: \"alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setError(\"\"),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), activeTab === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 border-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plaintext\",\n            className: \"form-label text-light\",\n            children: \"Plaintext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plaintext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to encrypt\",\n            value: plaintext,\n            onChange: e => setPlaintext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2\",\n            className: \"form-control\",\n            placeholder: \"Key (number \\u2265 2)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: encryptText,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Ciphertext:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: ciphertext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), visualization && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-light\",\n            children: \"Encryption Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-dark rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mb-2\",\n              children: [\"Original Matrix (Key: \", visualization.key, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-visualization\",\n              children: visualization.original.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-cell\",\n                  children: cell || \" \"\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 27\n                }, this))\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-3\",\n              children: [\"Original Length: \", visualization.originalLength, \" | Padded Length: \", visualization.paddedLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-2\",\n              children: \"Reading Direction: Column-wise (top to bottom)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-warning\",\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ciphertext\",\n            className: \"form-label text-light\",\n            children: \"Ciphertext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ciphertext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to decrypt\",\n            value: ciphertext,\n            onChange: e => setCiphertext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2\",\n            className: \"form-control\",\n            placeholder: \"Key (number \\u2265 2)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: decryptText,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Decrypted Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: decryptedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), activeTab === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"2\",\n          className: \"form-control\",\n          placeholder: \"Key (number \\u2265 2)\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: generateKey,\n          children: \"\\uD83D\\uDD10 Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: encryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), \"Encrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          onClick: decryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), \"Decrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress my-3 w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n          style: {\n            width: `${downloadProgress}%`\n          },\n          children: [downloadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }, this), fileResult && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileResult.url,\n        className: \"btn btn-primary mt-3\",\n        download: fileResult.filename,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this), \"Download Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), visualization && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-light\",\n        children: \"Encryption Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-dark rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light mb-2\",\n          children: [visualization.isDecryption ? \"Decryption\" : \"Encryption\", \" Matrix (Key: \", visualization.key, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matrix-visualization\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"matrix-header\",\n            children: Array.from({\n              length: visualization.key\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-header-cell\",\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), visualization.original.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"matrix-row\",\n            children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-cell\",\n              children: cell || \" \"\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light mt-3\",\n          children: [\"Original Length: \", visualization.originalLength, \" | Padded Length:\", \" \", visualization.paddedLength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light mt-2\",\n          children: [\"Reading Direction:\", \" \", visualization.isDecryption ? \"Row-wise (left to right)\" : \"Column-wise (top to bottom)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), visualization.isDecryption && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light mt-2\",\n          children: [\"Decrypted Text: \", visualization.decrypted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(TranspositionPage, \"xZi0Q9CsX6u49RzCVqD/1iH7ATc=\");\n_c = TranspositionPage;\nvar _c;\n$RefreshReg$(_c, \"TranspositionPage\");","map":{"version":3,"names":["useState","axios","Loader2","FileText","Download","jsxDEV","_jsxDEV","Fragment","_Fragment","TranspositionPage","_s","activeTab","setActiveTab","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decryptedText","setDecryptedText","error","setError","isLoading","setIsLoading","file","setFile","fileResult","setFileResult","downloadProgress","setDownloadProgress","isDownloading","setIsDownloading","visualization","setVisualization","validateInputs","encryptText","response","post","parseInt","data","numRows","Math","ceil","length","matrix","Array","fill","map","index","row","col","original","encrypted","originalLength","paddedLength","err","_err$response","_err$response$data","decryptText","decrypted","isDecryption","_err$response2","_err$response2$data","generateKey","randomKey","floor","random","toString","handleFileUpload","e","target","files","encryptFile","formData","FormData","append","res","responseType","onDownloadProgress","progressEvent","percent","round","loaded","total","blob","Blob","type","headers","url","URL","createObjectURL","filename","name","decryptFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","htmlFor","id","placeholder","value","onChange","rows","min","disabled","size","i","cell","j","style","width","href","download","from","_","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/VS Code/CryptographyWebApp/frontend/src/TranspositionPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Loader2, FileText, Download } from \"lucide-react\";\r\n\r\nexport default function TranspositionPage() {\r\n  const [activeTab, setActiveTab] = useState(\"text\");\r\n  const [plaintext, setPlaintext] = useState(\"\");\r\n  const [key, setKey] = useState(\"\");\r\n  const [ciphertext, setCiphertext] = useState(\"\");\r\n  const [decryptedText, setDecryptedText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [fileResult, setFileResult] = useState(\"\");\r\n  const [downloadProgress, setDownloadProgress] = useState(0);\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n  const [visualization, setVisualization] = useState(null);\r\n\r\n  const validateInputs = () => {\r\n    if (!plaintext && !ciphertext) {\r\n      setError(\"Please enter text to encrypt or decrypt\");\r\n      return false;\r\n    }\r\n    if (!key || key < 2) {\r\n      setError(\"Key must be at least 2\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const encryptText = async () => {\r\n    if (!validateInputs()) return;\r\n\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/encrypt/transposition\",\r\n        {\r\n          plaintext,\r\n          key: parseInt(key),\r\n        }\r\n      );\r\n      setCiphertext(response.data.ciphertext);\r\n\r\n      // Create visualization\r\n      const numRows = Math.ceil(plaintext.length / key);\r\n      const matrix = Array(numRows)\r\n        .fill()\r\n        .map(() => Array(key).fill(\"\"));\r\n      let index = 0;\r\n\r\n      for (let row = 0; row < numRows; row++) {\r\n        for (let col = 0; col < key; col++) {\r\n          if (index < plaintext.length) {\r\n            matrix[row][col] = plaintext[index++];\r\n          }\r\n        }\r\n      }\r\n\r\n      setVisualization({\r\n        original: matrix,\r\n        encrypted: response.data.ciphertext,\r\n        originalLength: response.data.originalLength,\r\n        paddedLength: response.data.paddedLength,\r\n        key: parseInt(key),\r\n      });\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.data?.error || \"Text encryption failed. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const decryptText = async () => {\r\n    if (!validateInputs()) return;\r\n\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/decrypt/transposition\",\r\n        {\r\n          ciphertext,\r\n          key: parseInt(key),\r\n        }\r\n      );\r\n      setDecryptedText(response.data.plaintext);\r\n\r\n      // Create visualization for decryption\r\n      const numRows = Math.ceil(ciphertext.length / key);\r\n      const matrix = Array(numRows)\r\n        .fill()\r\n        .map(() => Array(key).fill(\"\"));\r\n      let index = 0;\r\n\r\n      // Fill the matrix column by column (decryption)\r\n      for (let col = 0; col < key; col++) {\r\n        for (let row = 0; row < numRows; row++) {\r\n          if (index < ciphertext.length) {\r\n            matrix[row][col] = ciphertext[index++];\r\n          }\r\n        }\r\n      }\r\n\r\n      setVisualization({\r\n        original: matrix,\r\n        encrypted: ciphertext,\r\n        decrypted: response.data.plaintext,\r\n        originalLength: ciphertext.length,\r\n        paddedLength: ciphertext.length,\r\n        key: parseInt(key),\r\n        isDecryption: true,\r\n      });\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.data?.error || \"Text decryption failed. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateKey = () => {\r\n    const randomKey = Math.floor(Math.random() * 8) + 2; // Random key between 2 and 9\r\n    setKey(randomKey.toString());\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleFileUpload = (e) => setFile(e.target.files[0]);\r\n\r\n  const encryptFile = async () => {\r\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"key\", key);\r\n    try {\r\n      setIsDownloading(true);\r\n      setDownloadProgress(0);\r\n\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/encrypt-file/transposition\",\r\n        formData,\r\n        {\r\n          responseType: \"blob\",\r\n          onDownloadProgress: (progressEvent) => {\r\n            const percent = Math.round(\r\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\r\n            );\r\n            setDownloadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const url = URL.createObjectURL(blob);\r\n      setFileResult({ url, filename: \"encrypted_\" + file.name });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"File encryption failed.\");\r\n    } finally {\r\n      setIsDownloading(false);\r\n      setDownloadProgress(0);\r\n    }\r\n  };\r\n\r\n  const decryptFile = async () => {\r\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"key\", key);\r\n    try {\r\n      setIsDownloading(true);\r\n      setDownloadProgress(0);\r\n\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/decrypt-file/transposition\",\r\n        formData,\r\n        {\r\n          responseType: \"blob\",\r\n          onDownloadProgress: (progressEvent) => {\r\n            const percent = Math.round(\r\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\r\n            );\r\n            setDownloadProgress(percent);\r\n          },\r\n        }\r\n      );\r\n\r\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const url = URL.createObjectURL(blob);\r\n      setFileResult({ url, filename: \"decrypted_\" + file.name });\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"File decryption failed.\");\r\n    } finally {\r\n      setIsDownloading(false);\r\n      setDownloadProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1 className=\"text-light text-center\">Transposition Cipher</h1>\r\n      <p className=\"text-secondary text-center\">\r\n        A transposition cipher rearranges the letters of the plaintext according\r\n        to a numeric key. The cipher is case-sensitive and preserves the\r\n        original text formatting.\r\n      </p>\r\n\r\n      <div className=\"d-flex justify-content-center mb-4\">\r\n        <div className=\"btn-group\">\r\n          <button\r\n            className={`btn ${\r\n              activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveTab(\"text\")}\r\n          >\r\n            Text Encryption\r\n          </button>\r\n          <button\r\n            className={`btn ${\r\n              activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => setActiveTab(\"file\")}\r\n          >\r\n            File Encryption\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div\r\n          className=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          {error}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            onClick={() => setError(\"\")}\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"text\" && (\r\n        <div className=\"row mb-4\">\r\n          <div className=\"col-md-6 border-end\">\r\n            <h4 className=\"text-success\">Encrypt</h4>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"plaintext\" className=\"form-label text-light\">\r\n                Plaintext\r\n              </label>\r\n              <textarea\r\n                id=\"plaintext\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter text to encrypt\"\r\n                value={plaintext}\r\n                onChange={(e) => setPlaintext(e.target.value)}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"number\"\r\n                min=\"2\"\r\n                className=\"form-control\"\r\n                placeholder=\"Key (number ≥ 2)\"\r\n                value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-success\" onClick={generateKey}>\r\n                🔐 Generate\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-success\"\r\n              onClick={encryptText}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Loader2 className=\"me-2\" size={20} />\r\n                  Encrypting...\r\n                </>\r\n              ) : (\r\n                \"Encrypt\"\r\n              )}\r\n            </button>\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label text-light\">Ciphertext:</label>\r\n              <div className=\"p-2 bg-dark rounded\">\r\n                <code className=\"text-light\">{ciphertext}</code>\r\n              </div>\r\n            </div>\r\n\r\n            {visualization && (\r\n              <div className=\"mt-4\">\r\n                <h5 className=\"text-light\">Encryption Visualization</h5>\r\n                <div className=\"p-3 bg-dark rounded\">\r\n                  <p className=\"text-light mb-2\">\r\n                    Original Matrix (Key: {visualization.key}):\r\n                  </p>\r\n                  <div className=\"matrix-visualization\">\r\n                    {visualization.original.map((row, i) => (\r\n                      <div key={i} className=\"d-flex\">\r\n                        {row.map((cell, j) => (\r\n                          <div key={j} className=\"matrix-cell\">\r\n                            {cell || \" \"}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"text-light mt-3\">\r\n                    Original Length: {visualization.originalLength} | Padded\r\n                    Length: {visualization.paddedLength}\r\n                  </p>\r\n                  <p className=\"text-light mt-2\">\r\n                    Reading Direction: Column-wise (top to bottom)\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <h4 className=\"text-warning\">Decrypt</h4>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"ciphertext\" className=\"form-label text-light\">\r\n                Ciphertext\r\n              </label>\r\n              <textarea\r\n                id=\"ciphertext\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter text to decrypt\"\r\n                value={ciphertext}\r\n                onChange={(e) => setCiphertext(e.target.value)}\r\n                rows=\"3\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"number\"\r\n                min=\"2\"\r\n                className=\"form-control\"\r\n                placeholder=\"Key (number ≥ 2)\"\r\n                value={key}\r\n                onChange={(e) => setKey(e.target.value)}\r\n              />\r\n              <button className=\"btn btn-success\" onClick={generateKey}>\r\n                🔐 Generate\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              onClick={decryptText}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Loader2 className=\"me-2\" size={20} />\r\n                  Decrypting...\r\n                </>\r\n              ) : (\r\n                \"Decrypt\"\r\n              )}\r\n            </button>\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label text-light\">Decrypted Text:</label>\r\n              <div className=\"p-2 bg-dark rounded\">\r\n                <code className=\"text-light\">{decryptedText}</code>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"file\" && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={handleFileUpload}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"number\"\r\n              min=\"2\"\r\n              className=\"form-control\"\r\n              placeholder=\"Key (number ≥ 2)\"\r\n              value={key}\r\n              onChange={(e) => setKey(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-success\" onClick={generateKey}>\r\n              🔐 Generate\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex gap-2\">\r\n            <button className=\"btn btn-outline-success\" onClick={encryptFile}>\r\n              <FileText className=\"me-2\" size={20} />\r\n              Encrypt File\r\n            </button>\r\n            <button className=\"btn btn-outline-warning\" onClick={decryptFile}>\r\n              <FileText className=\"me-2\" size={20} />\r\n              Decrypt File\r\n            </button>\r\n          </div>\r\n          {isDownloading && (\r\n            <div className=\"progress my-3 w-100\">\r\n              <div\r\n                className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\r\n                style={{ width: `${downloadProgress}%` }}\r\n              >\r\n                {downloadProgress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n          {fileResult && (\r\n            <a\r\n              href={fileResult.url}\r\n              className=\"btn btn-primary mt-3\"\r\n              download={fileResult.filename}\r\n            >\r\n              <Download className=\"me-2\" size={20} />\r\n              Download Result\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {visualization && (\r\n        <div className=\"mt-4\">\r\n          <h5 className=\"text-light\">Encryption Visualization</h5>\r\n          <div className=\"p-3 bg-dark rounded\">\r\n            <p className=\"text-light mb-2\">\r\n              {visualization.isDecryption ? \"Decryption\" : \"Encryption\"} Matrix\r\n              (Key: {visualization.key}):\r\n            </p>\r\n            <div className=\"matrix-visualization\">\r\n              <div className=\"matrix-header\">\r\n                {Array.from({ length: visualization.key }, (_, i) => (\r\n                  <div key={i} className=\"matrix-header-cell\">\r\n                    {i + 1}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              {visualization.original.map((row, i) => (\r\n                <div key={i} className=\"matrix-row\">\r\n                  {row.map((cell, j) => (\r\n                    <div key={j} className=\"matrix-cell\">\r\n                      {cell || \" \"}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <p className=\"text-light mt-3\">\r\n              Original Length: {visualization.originalLength} | Padded Length:{\" \"}\r\n              {visualization.paddedLength}\r\n            </p>\r\n            <p className=\"text-light mt-2\">\r\n              Reading Direction:{\" \"}\r\n              {visualization.isDecryption\r\n                ? \"Row-wise (left to right)\"\r\n                : \"Column-wise (top to bottom)\"}\r\n            </p>\r\n            {visualization.isDecryption && (\r\n              <p className=\"text-light mt-2\">\r\n                Decrypted Text: {visualization.decrypted}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
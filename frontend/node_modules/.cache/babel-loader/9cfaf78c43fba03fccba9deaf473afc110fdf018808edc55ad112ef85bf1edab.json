{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\VS Code\\\\CryptographyWebApp\\\\frontend\\\\src\\\\TranspositionPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TranspositionPage() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    if (!/^[a-zA-Z]+$/.test(key)) {\n      setError(\"Keyword must contain only letters\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique letters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\"http://localhost:5000/encrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          plaintext,\n          key\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCiphertext(data.ciphertext);\n        setError(\"\");\n\n        // Create visualization\n        setVisualization({\n          matrix: data.steps.step2,\n          columnOrder: data.columnOrder,\n          originalLength: data.originalLength,\n          paddedLength: data.paddedLength,\n          key: data.key,\n          isEncryption: true,\n          steps: data.steps || {\n            step1: plaintext.replace(/\\s+/g, \"_\"),\n            step2: data.steps.step2,\n            step3: data.ciphertext\n          }\n        });\n      } else {\n        setError(data.error || \"Failed to encrypt text\");\n      }\n    } catch (err) {\n      setError(\"Failed to encrypt text. Please check your input and try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\"http://localhost:5000/decrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ciphertext,\n          key\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDecryptedText(data.plaintext);\n        setError(\"\");\n\n        // Create visualization for decryption\n        setVisualization({\n          matrix: data.steps.step2,\n          columnOrder: key.toUpperCase().split(\"\"),\n          originalLength: ciphertext.length,\n          paddedLength: ciphertext.length,\n          key: data.key,\n          isDecryption: true,\n          steps: data.steps || {\n            step1: ciphertext,\n            step2: data.steps.step2,\n            step3: data.plaintext\n          }\n        });\n      } else {\n        setError(data.error || \"Failed to decrypt text\");\n      }\n    } catch (err) {\n      setError(\"Failed to decrypt text. Please check your input and try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const generateKey = () => {\n    // Generate a random keyword with at least 2 unique characters\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const length = Math.floor(Math.random() * 4) + 3; // Random length between 3 and 6\n    let keyword = \"\";\n\n    // Ensure at least 2 unique characters\n    const firstChar = characters.charAt(Math.floor(Math.random() * characters.length));\n    const secondChar = characters.charAt(Math.floor(Math.random() * characters.length));\n    keyword = firstChar + secondChar;\n\n    // Add remaining characters\n    for (let i = 2; i < length; i++) {\n      keyword += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    setKey(keyword);\n    setError(\"\");\n  };\n  const handleFileUpload = e => setFile(e.target.files[0]);\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/encrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"encrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/decrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"decrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"The Transposition Cipher rearranges the letters of the plaintext according to a keyword. The keyword determines the order of columns in the matrix. The text is written row by row and read column by column in the order specified by the keyword. All spaces are replaced with underscores (_) for clarity in transmission. The cipher preserves the case of the original text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"text\"),\n          children: \"Text Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"file\"),\n          children: \"File Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger alert-dismissible fade show\",\n      role: \"alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setError(\"\"),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), activeTab === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 border-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plaintext\",\n            className: \"form-label text-light\",\n            children: \"Plaintext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plaintext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to encrypt\",\n            value: plaintext,\n            onChange: e => setPlaintext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Keyword\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: encryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Ciphertext:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: ciphertext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), visualization && visualization.steps && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transposition Cipher Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-steps\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Step 1:\", \" \", visualization.isDecryption ? \"Ciphertext\" : \"Space Replacement\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-content\",\n                children: visualization.steps.step1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Step 2:\", \" \", visualization.isDecryption ? \"Column Distribution\" : \"Matrix Formation\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-visualization\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-header\",\n                  children: visualization.columnOrder.map((char, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"matrix-cell header\",\n                    children: char\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this), visualization.steps.step2.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-row\",\n                  children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"matrix-cell\",\n                    children: cell === \"_\" ? \" _\" : cell\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 29\n                  }, this))\n                }, rowIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Step 3:\", \" \", visualization.isDecryption ? \"Row Reading\" : \"Column Reading\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-content\",\n                children: visualization.steps.step3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"visualization-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Original length: \", visualization.originalLength, \" characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Padded length: \", visualization.paddedLength, \" characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Reading direction:\", \" \", visualization.isDecryption ? \"Row-wise\" : \"Column-wise in keyword order\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Keyword: \", visualization.key]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Note: Spaces are replaced with underscores (_) for clarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-warning\",\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ciphertext\",\n            className: \"form-label text-light\",\n            children: \"Ciphertext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ciphertext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to decrypt\",\n            value: ciphertext,\n            onChange: e => setCiphertext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Key (text)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: decryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Decrypted Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: decryptedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), activeTab === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Key (text)\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: generateKey,\n          children: \"\\uD83D\\uDD10 Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: encryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), \"Encrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          onClick: decryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), \"Decrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress my-3 w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n          style: {\n            width: `${downloadProgress}%`\n          },\n          children: [downloadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }, this), fileResult && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileResult.url,\n        className: \"btn btn-primary mt-3\",\n        download: fileResult.filename,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 15\n        }, this), \"Download Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(TranspositionPage, \"J0gfUDvHmItKeXiC2d+tBz8G6EE=\");\n_c = TranspositionPage;\nvar _c;\n$RefreshReg$(_c, \"TranspositionPage\");","map":{"version":3,"names":["useState","axios","Loader2","FileText","Download","jsxDEV","_jsxDEV","Fragment","_Fragment","TranspositionPage","_s","activeTab","setActiveTab","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decryptedText","setDecryptedText","error","setError","isLoading","setIsLoading","file","setFile","fileResult","setFileResult","downloadProgress","setDownloadProgress","isDownloading","setIsDownloading","visualization","setVisualization","isProcessing","setIsProcessing","validateInputs","trim","test","uniqueChars","Set","toUpperCase","split","size","encryptText","response","fetch","method","headers","body","JSON","stringify","data","json","ok","matrix","steps","step2","columnOrder","originalLength","paddedLength","isEncryption","step1","replace","step3","err","decryptText","length","isDecryption","generateKey","characters","Math","floor","random","keyword","firstChar","charAt","secondChar","i","handleFileUpload","e","target","files","encryptFile","formData","FormData","append","res","post","responseType","onDownloadProgress","progressEvent","percent","round","loaded","total","blob","Blob","type","url","URL","createObjectURL","filename","name","decryptFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","htmlFor","id","placeholder","value","onChange","rows","disabled","map","char","index","row","rowIndex","cell","colIndex","style","width","href","download","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/VS Code/CryptographyWebApp/frontend/src/TranspositionPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\n\nexport default function TranspositionPage() {\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    if (!/^[a-zA-Z]+$/.test(key)) {\n      setError(\"Keyword must contain only letters\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique letters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\n        \"http://localhost:5000/encrypt/transposition\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ plaintext, key }),\n        }\n      );\n\n      const data = await response.json();\n      if (response.ok) {\n        setCiphertext(data.ciphertext);\n        setError(\"\");\n\n        // Create visualization\n        setVisualization({\n          matrix: data.steps.step2,\n          columnOrder: data.columnOrder,\n          originalLength: data.originalLength,\n          paddedLength: data.paddedLength,\n          key: data.key,\n          isEncryption: true,\n          steps: data.steps || {\n            step1: plaintext.replace(/\\s+/g, \"_\"),\n            step2: data.steps.step2,\n            step3: data.ciphertext,\n          },\n        });\n      } else {\n        setError(data.error || \"Failed to encrypt text\");\n      }\n    } catch (err) {\n      setError(\n        \"Failed to encrypt text. Please check your input and try again.\"\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\n        \"http://localhost:5000/decrypt/transposition\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ ciphertext, key }),\n        }\n      );\n\n      const data = await response.json();\n      if (response.ok) {\n        setDecryptedText(data.plaintext);\n        setError(\"\");\n\n        // Create visualization for decryption\n        setVisualization({\n          matrix: data.steps.step2,\n          columnOrder: key.toUpperCase().split(\"\"),\n          originalLength: ciphertext.length,\n          paddedLength: ciphertext.length,\n          key: data.key,\n          isDecryption: true,\n          steps: data.steps || {\n            step1: ciphertext,\n            step2: data.steps.step2,\n            step3: data.plaintext,\n          },\n        });\n      } else {\n        setError(data.error || \"Failed to decrypt text\");\n      }\n    } catch (err) {\n      setError(\n        \"Failed to decrypt text. Please check your input and try again.\"\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const generateKey = () => {\n    // Generate a random keyword with at least 2 unique characters\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const length = Math.floor(Math.random() * 4) + 3; // Random length between 3 and 6\n    let keyword = \"\";\n\n    // Ensure at least 2 unique characters\n    const firstChar = characters.charAt(\n      Math.floor(Math.random() * characters.length)\n    );\n    const secondChar = characters.charAt(\n      Math.floor(Math.random() * characters.length)\n    );\n    keyword = firstChar + secondChar;\n\n    // Add remaining characters\n    for (let i = 2; i < length; i++) {\n      keyword += characters.charAt(\n        Math.floor(Math.random() * characters.length)\n      );\n    }\n\n    setKey(keyword);\n    setError(\"\");\n  };\n\n  const handleFileUpload = (e) => setFile(e.target.files[0]);\n\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n\n      const res = await axios.post(\n        \"http://localhost:5000/encrypt-file/transposition\",\n        formData,\n        {\n          responseType: \"blob\",\n          onDownloadProgress: (progressEvent) => {\n            const percent = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setDownloadProgress(percent);\n          },\n        }\n      );\n\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\n      const url = URL.createObjectURL(blob);\n      setFileResult({ url, filename: \"encrypted_\" + file.name });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n\n      const res = await axios.post(\n        \"http://localhost:5000/decrypt-file/transposition\",\n        formData,\n        {\n          responseType: \"blob\",\n          onDownloadProgress: (progressEvent) => {\n            const percent = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setDownloadProgress(percent);\n          },\n        }\n      );\n\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\n      const url = URL.createObjectURL(blob);\n      setFileResult({ url, filename: \"decrypted_\" + file.name });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Transposition Cipher</h1>\n      <p className=\"description\">\n        The Transposition Cipher rearranges the letters of the plaintext\n        according to a keyword. The keyword determines the order of columns in\n        the matrix. The text is written row by row and read column by column in\n        the order specified by the keyword. All spaces are replaced with\n        underscores (_) for clarity in transmission. The cipher preserves the\n        case of the original text.\n      </p>\n\n      <div className=\"d-flex justify-content-center mb-4\">\n        <div className=\"btn-group\">\n          <button\n            className={`btn ${\n              activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"\n            }`}\n            onClick={() => setActiveTab(\"text\")}\n          >\n            Text Encryption\n          </button>\n          <button\n            className={`btn ${\n              activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"\n            }`}\n            onClick={() => setActiveTab(\"file\")}\n          >\n            File Encryption\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div\n          className=\"alert alert-danger alert-dismissible fade show\"\n          role=\"alert\"\n        >\n          {error}\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={() => setError(\"\")}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      )}\n\n      {activeTab === \"text\" && (\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 border-end\">\n            <h4 className=\"text-success\">Encrypt</h4>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"plaintext\" className=\"form-label text-light\">\n                Plaintext\n              </label>\n              <textarea\n                id=\"plaintext\"\n                className=\"form-control\"\n                placeholder=\"Enter text to encrypt\"\n                value={plaintext}\n                onChange={(e) => setPlaintext(e.target.value)}\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Keyword\"\n                value={key}\n                onChange={(e) => setKey(e.target.value)}\n              />\n              <button className=\"btn btn-success\" onClick={generateKey}>\n                🔐 Generate\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-success\"\n              onClick={encryptText}\n              disabled={isProcessing}\n            >\n              {isProcessing ? (\n                <>\n                  <Loader2 className=\"me-2\" size={20} />\n                  Encrypting...\n                </>\n              ) : (\n                \"Encrypt\"\n              )}\n            </button>\n            <div className=\"mt-3\">\n              <label className=\"form-label text-light\">Ciphertext:</label>\n              <div className=\"p-2 bg-dark rounded\">\n                <code className=\"text-light\">{ciphertext}</code>\n              </div>\n            </div>\n\n            {visualization && visualization.steps && (\n              <div className=\"visualization-container\">\n                <h3>Transposition Cipher Process</h3>\n\n                <div className=\"process-steps\">\n                  <div className=\"step\">\n                    <h4>\n                      Step 1:{\" \"}\n                      {visualization.isDecryption\n                        ? \"Ciphertext\"\n                        : \"Space Replacement\"}\n                    </h4>\n                    <div className=\"step-content\">\n                      {visualization.steps.step1}\n                    </div>\n                  </div>\n\n                  <div className=\"step\">\n                    <h4>\n                      Step 2:{\" \"}\n                      {visualization.isDecryption\n                        ? \"Column Distribution\"\n                        : \"Matrix Formation\"}\n                    </h4>\n                    <div className=\"matrix-visualization\">\n                      <div className=\"matrix-header\">\n                        {visualization.columnOrder.map((char, index) => (\n                          <div key={index} className=\"matrix-cell header\">\n                            {char}\n                          </div>\n                        ))}\n                      </div>\n                      {visualization.steps.step2.map((row, rowIndex) => (\n                        <div key={rowIndex} className=\"matrix-row\">\n                          {row.map((cell, colIndex) => (\n                            <div key={colIndex} className=\"matrix-cell\">\n                              {cell === \"_\" ? \" _\" : cell}\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"step\">\n                    <h4>\n                      Step 3:{\" \"}\n                      {visualization.isDecryption\n                        ? \"Row Reading\"\n                        : \"Column Reading\"}\n                    </h4>\n                    <div className=\"step-content\">\n                      {visualization.steps.step3}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"visualization-info\">\n                  <p>\n                    Original length: {visualization.originalLength} characters\n                  </p>\n                  <p>Padded length: {visualization.paddedLength} characters</p>\n                  <p>\n                    Reading direction:{\" \"}\n                    {visualization.isDecryption\n                      ? \"Row-wise\"\n                      : \"Column-wise in keyword order\"}\n                  </p>\n                  <p>Keyword: {visualization.key}</p>\n                  <p>\n                    Note: Spaces are replaced with underscores (_) for clarity\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"col-md-6\">\n            <h4 className=\"text-warning\">Decrypt</h4>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"ciphertext\" className=\"form-label text-light\">\n                Ciphertext\n              </label>\n              <textarea\n                id=\"ciphertext\"\n                className=\"form-control\"\n                placeholder=\"Enter text to decrypt\"\n                value={ciphertext}\n                onChange={(e) => setCiphertext(e.target.value)}\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Key (text)\"\n                value={key}\n                onChange={(e) => setKey(e.target.value)}\n              />\n              <button className=\"btn btn-success\" onClick={generateKey}>\n                🔐 Generate\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-warning\"\n              onClick={decryptText}\n              disabled={isProcessing}\n            >\n              {isProcessing ? (\n                <>\n                  <Loader2 className=\"me-2\" size={20} />\n                  Decrypting...\n                </>\n              ) : (\n                \"Decrypt\"\n              )}\n            </button>\n            <div className=\"mt-3\">\n              <label className=\"form-label text-light\">Decrypted Text:</label>\n              <div className=\"p-2 bg-dark rounded\">\n                <code className=\"text-light\">{decryptedText}</code>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeTab === \"file\" && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              onChange={handleFileUpload}\n            />\n          </div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Key (text)\"\n              value={key}\n              onChange={(e) => setKey(e.target.value)}\n            />\n            <button className=\"btn btn-success\" onClick={generateKey}>\n              🔐 Generate\n            </button>\n          </div>\n          <div className=\"d-flex gap-2\">\n            <button className=\"btn btn-outline-success\" onClick={encryptFile}>\n              <FileText className=\"me-2\" size={20} />\n              Encrypt File\n            </button>\n            <button className=\"btn btn-outline-warning\" onClick={decryptFile}>\n              <FileText className=\"me-2\" size={20} />\n              Decrypt File\n            </button>\n          </div>\n          {isDownloading && (\n            <div className=\"progress my-3 w-100\">\n              <div\n                className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                style={{ width: `${downloadProgress}%` }}\n              >\n                {downloadProgress}%\n              </div>\n            </div>\n          )}\n          {fileResult && (\n            <a\n              href={fileResult.url}\n              className=\"btn btn-primary mt-3\"\n              download={fileResult.filename}\n            >\n              <Download className=\"me-2\" size={20} />\n              Download Result\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
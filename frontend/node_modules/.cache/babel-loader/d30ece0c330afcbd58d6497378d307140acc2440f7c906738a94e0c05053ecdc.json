{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\VS Code\\\\CryptographyWebApp\\\\frontend\\\\src\\\\TranspositionPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TranspositionPage() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique characters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\"http://localhost:5000/encrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          plaintext,\n          key\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCiphertext(data.ciphertext);\n        setError(\"\");\n\n        // Create visualization\n        const numRows = Math.ceil(data.paddedLength / data.columnOrder.length);\n        const matrix = Array(numRows).fill().map(() => Array(data.columnOrder.length).fill(\"\"));\n        let index = 0;\n\n        // Fill the matrix row by row\n        for (let row = 0; row < numRows; row++) {\n          for (let col = 0; col < data.columnOrder.length; col++) {\n            if (index < plaintext.length) {\n              matrix[row][col] = plaintext[index++];\n            } else {\n              matrix[row][col] = \"_\";\n            }\n          }\n        }\n        setVisualization({\n          matrix,\n          columnOrder: data.columnOrder,\n          originalLength: data.originalLength,\n          paddedLength: data.paddedLength,\n          key: key.toUpperCase()\n        });\n      } else {\n        setError(data.error);\n      }\n    } catch (err) {\n      setError(\"Failed to encrypt text\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/decrypt/transposition\", {\n        ciphertext,\n        key: parseInt(key)\n      });\n      setDecryptedText(response.data.plaintext);\n\n      // Create visualization for decryption\n      const numRows = Math.ceil(ciphertext.length / key);\n      const matrix = Array(numRows).fill().map(() => Array(key).fill(\"\"));\n      let index = 0;\n\n      // Fill the matrix column by column\n      for (let col = 0; col < key; col++) {\n        for (let row = 0; row < numRows; row++) {\n          if (index < ciphertext.length) {\n            matrix[row][col] = ciphertext[index++];\n          }\n        }\n      }\n      setVisualization({\n        original: matrix,\n        encrypted: ciphertext,\n        decrypted: response.data.plaintext,\n        originalLength: ciphertext.length,\n        paddedLength: ciphertext.length,\n        key: parseInt(key),\n        isDecryption: true\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Decryption error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Text decryption failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateKey = () => {\n    const randomKey = Math.floor(Math.random() * 8) + 2; // Random key between 2 and 9\n    setKey(randomKey.toString());\n    setError(\"\");\n  };\n  const handleFileUpload = e => setFile(e.target.files[0]);\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/encrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"encrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/decrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"decrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-light text-center\",\n      children: \"Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-secondary text-center\",\n      children: \"The Transposition Cipher rearranges the letters of the plaintext according to a keyword. The keyword determines the order of columns in the matrix. The text is written row by row and read column by column in the order specified by the keyword. Empty spaces are filled with underscores (_). The cipher preserves the case of the original text.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"text\"),\n          children: \"Text Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"file\"),\n          children: \"File Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger alert-dismissible fade show\",\n      role: \"alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setError(\"\"),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), activeTab === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 border-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plaintext\",\n            className: \"form-label text-light\",\n            children: \"Plaintext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plaintext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to encrypt\",\n            value: plaintext,\n            onChange: e => setPlaintext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Keyword\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: encryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Ciphertext:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: ciphertext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), visualization && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-light\",\n            children: \"Transposition Cipher Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-dark rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mb-2\",\n              children: [\"Original Matrix (Key: \", key, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-visualization\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-header\",\n                children: visualization.columnOrder.map((char, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-header-cell\",\n                  children: char\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), visualization.matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-row\",\n                children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-cell\",\n                  children: cell === \"_\" ? \" _\" : cell || \" \"\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 27\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-3\",\n              children: [\"Original Length: \", visualization.originalLength, \" | Padded Length: \", visualization.paddedLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-2\",\n              children: \"Reading Direction: Column-wise in keyword order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this), visualization.isDecryption && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light mt-2\",\n              children: [\"Decrypted Text: \", visualization.decrypted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-warning\",\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ciphertext\",\n            className: \"form-label text-light\",\n            children: \"Ciphertext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ciphertext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to decrypt\",\n            value: ciphertext,\n            onChange: e => setCiphertext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Key (text)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: decryptText,\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Decrypted Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: decryptedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), activeTab === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Key (text)\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: generateKey,\n          children: \"\\uD83D\\uDD10 Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: encryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), \"Encrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          onClick: decryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), \"Decrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress my-3 w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n          style: {\n            width: `${downloadProgress}%`\n          },\n          children: [downloadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }, this), fileResult && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileResult.url,\n        className: \"btn btn-primary mt-3\",\n        download: fileResult.filename,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this), \"Download Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(TranspositionPage, \"J0gfUDvHmItKeXiC2d+tBz8G6EE=\");\n_c = TranspositionPage;\nvar _c;\n$RefreshReg$(_c, \"TranspositionPage\");","map":{"version":3,"names":["useState","axios","Loader2","FileText","Download","jsxDEV","_jsxDEV","Fragment","_Fragment","TranspositionPage","_s","activeTab","setActiveTab","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decryptedText","setDecryptedText","error","setError","isLoading","setIsLoading","file","setFile","fileResult","setFileResult","downloadProgress","setDownloadProgress","isDownloading","setIsDownloading","visualization","setVisualization","isProcessing","setIsProcessing","validateInputs","trim","uniqueChars","Set","toUpperCase","split","size","encryptText","response","fetch","method","headers","body","JSON","stringify","data","json","ok","numRows","Math","ceil","paddedLength","columnOrder","length","matrix","Array","fill","map","index","row","col","originalLength","err","decryptText","post","parseInt","original","encrypted","decrypted","isDecryption","_err$response","_err$response$data","console","generateKey","randomKey","floor","random","toString","handleFileUpload","e","target","files","encryptFile","formData","FormData","append","res","responseType","onDownloadProgress","progressEvent","percent","round","loaded","total","blob","Blob","type","url","URL","createObjectURL","filename","name","decryptFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","htmlFor","id","placeholder","value","onChange","rows","disabled","char","rowIndex","cell","colIndex","style","width","href","download","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/VS Code/CryptographyWebApp/frontend/src/TranspositionPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\n\nexport default function TranspositionPage() {\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique characters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\n        \"http://localhost:5000/encrypt/transposition\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ plaintext, key }),\n        }\n      );\n\n      const data = await response.json();\n      if (response.ok) {\n        setCiphertext(data.ciphertext);\n        setError(\"\");\n\n        // Create visualization\n        const numRows = Math.ceil(data.paddedLength / data.columnOrder.length);\n        const matrix = Array(numRows)\n          .fill()\n          .map(() => Array(data.columnOrder.length).fill(\"\"));\n        let index = 0;\n\n        // Fill the matrix row by row\n        for (let row = 0; row < numRows; row++) {\n          for (let col = 0; col < data.columnOrder.length; col++) {\n            if (index < plaintext.length) {\n              matrix[row][col] = plaintext[index++];\n            } else {\n              matrix[row][col] = \"_\";\n            }\n          }\n        }\n\n        setVisualization({\n          matrix,\n          columnOrder: data.columnOrder,\n          originalLength: data.originalLength,\n          paddedLength: data.paddedLength,\n          key: key.toUpperCase(),\n        });\n      } else {\n        setError(data.error);\n      }\n    } catch (err) {\n      setError(\"Failed to encrypt text\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/decrypt/transposition\",\n        {\n          ciphertext,\n          key: parseInt(key),\n        }\n      );\n      setDecryptedText(response.data.plaintext);\n\n      // Create visualization for decryption\n      const numRows = Math.ceil(ciphertext.length / key);\n      const matrix = Array(numRows)\n        .fill()\n        .map(() => Array(key).fill(\"\"));\n      let index = 0;\n\n      // Fill the matrix column by column\n      for (let col = 0; col < key; col++) {\n        for (let row = 0; row < numRows; row++) {\n          if (index < ciphertext.length) {\n            matrix[row][col] = ciphertext[index++];\n          }\n        }\n      }\n\n      setVisualization({\n        original: matrix,\n        encrypted: ciphertext,\n        decrypted: response.data.plaintext,\n        originalLength: ciphertext.length,\n        paddedLength: ciphertext.length,\n        key: parseInt(key),\n        isDecryption: true,\n      });\n    } catch (err) {\n      console.error(\"Decryption error:\", err);\n      setError(\n        err.response?.data?.error || \"Text decryption failed. Please try again.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const generateKey = () => {\n    const randomKey = Math.floor(Math.random() * 8) + 2; // Random key between 2 and 9\n    setKey(randomKey.toString());\n    setError(\"\");\n  };\n\n  const handleFileUpload = (e) => setFile(e.target.files[0]);\n\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n\n      const res = await axios.post(\n        \"http://localhost:5000/encrypt-file/transposition\",\n        formData,\n        {\n          responseType: \"blob\",\n          onDownloadProgress: (progressEvent) => {\n            const percent = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setDownloadProgress(percent);\n          },\n        }\n      );\n\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\n      const url = URL.createObjectURL(blob);\n      setFileResult({ url, filename: \"encrypted_\" + file.name });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n\n      const res = await axios.post(\n        \"http://localhost:5000/decrypt-file/transposition\",\n        formData,\n        {\n          responseType: \"blob\",\n          onDownloadProgress: (progressEvent) => {\n            const percent = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setDownloadProgress(percent);\n          },\n        }\n      );\n\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\n      const url = URL.createObjectURL(blob);\n      setFileResult({ url, filename: \"decrypted_\" + file.name });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h1 className=\"text-light text-center\">Transposition Cipher</h1>\n      <p className=\"text-secondary text-center\">\n        The Transposition Cipher rearranges the letters of the plaintext\n        according to a keyword. The keyword determines the order of columns in\n        the matrix. The text is written row by row and read column by column in\n        the order specified by the keyword. Empty spaces are filled with\n        underscores (_). The cipher preserves the case of the original text.\n      </p>\n\n      <div className=\"d-flex justify-content-center mb-4\">\n        <div className=\"btn-group\">\n          <button\n            className={`btn ${\n              activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"\n            }`}\n            onClick={() => setActiveTab(\"text\")}\n          >\n            Text Encryption\n          </button>\n          <button\n            className={`btn ${\n              activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"\n            }`}\n            onClick={() => setActiveTab(\"file\")}\n          >\n            File Encryption\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div\n          className=\"alert alert-danger alert-dismissible fade show\"\n          role=\"alert\"\n        >\n          {error}\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={() => setError(\"\")}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      )}\n\n      {activeTab === \"text\" && (\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 border-end\">\n            <h4 className=\"text-success\">Encrypt</h4>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"plaintext\" className=\"form-label text-light\">\n                Plaintext\n              </label>\n              <textarea\n                id=\"plaintext\"\n                className=\"form-control\"\n                placeholder=\"Enter text to encrypt\"\n                value={plaintext}\n                onChange={(e) => setPlaintext(e.target.value)}\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Keyword\"\n                value={key}\n                onChange={(e) => setKey(e.target.value)}\n              />\n              <button className=\"btn btn-success\" onClick={generateKey}>\n                🔐 Generate\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-success\"\n              onClick={encryptText}\n              disabled={isProcessing}\n            >\n              {isProcessing ? (\n                <>\n                  <Loader2 className=\"me-2\" size={20} />\n                  Encrypting...\n                </>\n              ) : (\n                \"Encrypt\"\n              )}\n            </button>\n            <div className=\"mt-3\">\n              <label className=\"form-label text-light\">Ciphertext:</label>\n              <div className=\"p-2 bg-dark rounded\">\n                <code className=\"text-light\">{ciphertext}</code>\n              </div>\n            </div>\n\n            {visualization && (\n              <div className=\"mt-4\">\n                <h5 className=\"text-light\">\n                  Transposition Cipher Visualization\n                </h5>\n                <div className=\"p-3 bg-dark rounded\">\n                  <p className=\"text-light mb-2\">\n                    Original Matrix (Key: {key}):\n                  </p>\n                  <div className=\"matrix-visualization\">\n                    <div className=\"matrix-header\">\n                      {visualization.columnOrder.map((char, index) => (\n                        <div key={index} className=\"matrix-header-cell\">\n                          {char}\n                        </div>\n                      ))}\n                    </div>\n                    {visualization.matrix.map((row, rowIndex) => (\n                      <div key={rowIndex} className=\"matrix-row\">\n                        {row.map((cell, colIndex) => (\n                          <div key={colIndex} className=\"matrix-cell\">\n                            {cell === \"_\" ? \" _\" : cell || \" \"}\n                          </div>\n                        ))}\n                      </div>\n                    ))}\n                  </div>\n                  <p className=\"text-light mt-3\">\n                    Original Length: {visualization.originalLength} | Padded\n                    Length: {visualization.paddedLength}\n                  </p>\n                  <p className=\"text-light mt-2\">\n                    Reading Direction: Column-wise in keyword order\n                  </p>\n                  {visualization.isDecryption && (\n                    <p className=\"text-light mt-2\">\n                      Decrypted Text: {visualization.decrypted}\n                    </p>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"col-md-6\">\n            <h4 className=\"text-warning\">Decrypt</h4>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"ciphertext\" className=\"form-label text-light\">\n                Ciphertext\n              </label>\n              <textarea\n                id=\"ciphertext\"\n                className=\"form-control\"\n                placeholder=\"Enter text to decrypt\"\n                value={ciphertext}\n                onChange={(e) => setCiphertext(e.target.value)}\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Key (text)\"\n                value={key}\n                onChange={(e) => setKey(e.target.value)}\n              />\n              <button className=\"btn btn-success\" onClick={generateKey}>\n                🔐 Generate\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-warning\"\n              onClick={decryptText}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"me-2\" size={20} />\n                  Decrypting...\n                </>\n              ) : (\n                \"Decrypt\"\n              )}\n            </button>\n            <div className=\"mt-3\">\n              <label className=\"form-label text-light\">Decrypted Text:</label>\n              <div className=\"p-2 bg-dark rounded\">\n                <code className=\"text-light\">{decryptedText}</code>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeTab === \"file\" && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              onChange={handleFileUpload}\n            />\n          </div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Key (text)\"\n              value={key}\n              onChange={(e) => setKey(e.target.value)}\n            />\n            <button className=\"btn btn-success\" onClick={generateKey}>\n              🔐 Generate\n            </button>\n          </div>\n          <div className=\"d-flex gap-2\">\n            <button className=\"btn btn-outline-success\" onClick={encryptFile}>\n              <FileText className=\"me-2\" size={20} />\n              Encrypt File\n            </button>\n            <button className=\"btn btn-outline-warning\" onClick={decryptFile}>\n              <FileText className=\"me-2\" size={20} />\n              Decrypt File\n            </button>\n          </div>\n          {isDownloading && (\n            <div className=\"progress my-3 w-100\">\n              <div\n                className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                style={{ width: `${downloadProgress}%` }}\n              >\n                {downloadProgress}%\n              </div>\n            </div>\n          )}\n          {fileResult && (\n            <a\n              href={fileResult.url}\n              className=\"btn btn-primary mt-3\"\n              download={fileResult.filename}\n            >\n              <Download className=\"me-2\" size={20} />\n              Download Result\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\VS Code\\\\CryptographyWebApp\\\\frontend\\\\src\\\\TranspositionPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TranspositionPage() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    if (!/^[a-zA-Z]+$/.test(key)) {\n      setError(\"Keyword must contain only letters\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique letters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\"http://localhost:5000/encrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          plaintext,\n          key\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCiphertext(data.ciphertext);\n        setError(\"\");\n\n        // Create visualization\n        const numRows = Math.ceil(data.paddedLength / data.columnOrder.length);\n        const matrix = Array(numRows).fill().map(() => Array(data.columnOrder.length).fill(\"_\"));\n        let index = 0;\n\n        // Fill the matrix row by row\n        for (let row = 0; row < numRows; row++) {\n          for (let col = 0; col < data.columnOrder.length; col++) {\n            if (index < plaintext.length) {\n              matrix[row][col] = plaintext[index++];\n            }\n          }\n        }\n        setVisualization({\n          matrix,\n          columnOrder: data.columnOrder,\n          originalLength: data.originalLength,\n          paddedLength: data.paddedLength,\n          key: data.key,\n          isEncryption: true,\n          steps: {\n            preprocessing: {\n              originalText: plaintext,\n              processedText: data.paddedText,\n              key: data.key,\n              columnOrder: data.columnOrder\n            },\n            matrix: {\n              numRows,\n              numCols: data.columnOrder.length\n            },\n            transformation: {\n              readingOrder: data.columnOrder,\n              plaintext: data.paddedText,\n              ciphertext: data.ciphertext\n            }\n          }\n        });\n      } else {\n        setError(data.error || \"Failed to encrypt text\");\n      }\n    } catch (err) {\n      setError(\"Failed to encrypt text. Please check your input and try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\"http://localhost:5000/decrypt/transposition\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ciphertext,\n          key\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDecryptedText(data.plaintext);\n        setError(\"\");\n\n        // Create visualization for decryption\n        setVisualization({\n          matrix: data.steps.matrix.matrix,\n          columnOrder: data.steps.preprocessing.columnOrder,\n          originalLength: ciphertext.length,\n          paddedLength: ciphertext.length,\n          key: data.key,\n          isDecryption: true,\n          steps: {\n            preprocessing: {\n              ciphertext: ciphertext,\n              key: data.key,\n              columnOrder: data.steps.preprocessing.columnOrder\n            },\n            matrix: {\n              numRows: data.steps.matrix.numRows,\n              numCols: data.steps.matrix.numCols,\n              matrix: data.steps.matrix.matrix,\n              columnLengths: data.steps.matrix.columnLengths\n            },\n            transformation: {\n              readingOrder: data.steps.transformation.readingOrder,\n              plaintext: data.plaintext\n            }\n          }\n        });\n      } else {\n        setError(data.error || \"Failed to decrypt text\");\n      }\n    } catch (err) {\n      setError(\"Failed to decrypt text. Please check your input and try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const generateKey = () => {\n    // Generate a random keyword with at least 2 unique characters\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const length = Math.floor(Math.random() * 4) + 3; // Random length between 3 and 6\n    let keyword = \"\";\n\n    // Ensure at least 2 unique characters\n    const firstChar = characters.charAt(Math.floor(Math.random() * characters.length));\n    const secondChar = characters.charAt(Math.floor(Math.random() * characters.length));\n    keyword = firstChar + secondChar;\n\n    // Add remaining characters\n    for (let i = 2; i < length; i++) {\n      keyword += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    setKey(keyword);\n    setError(\"\");\n  };\n  const handleFileUpload = e => setFile(e.target.files[0]);\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/encrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"encrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      const res = await axios.post(\"http://localhost:5000/decrypt-file/transposition\", formData, {\n        responseType: \"blob\",\n        onDownloadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setDownloadProgress(percent);\n        }\n      });\n      const blob = new Blob([res.data], {\n        type: res.headers[\"content-type\"]\n      });\n      const url = URL.createObjectURL(blob);\n      setFileResult({\n        url,\n        filename: \"decrypted_\" + file.name\n      });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transposition Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"The Transposition Cipher rearranges the letters of the plaintext according to a keyword. The process consists of three steps: preprocessing, matrix creation, and text transformation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"text\"),\n          children: \"Text Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"}`,\n          onClick: () => setActiveTab(\"file\"),\n          children: \"File Encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger alert-dismissible fade show\",\n      role: \"alert\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        onClick: () => setError(\"\"),\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), activeTab === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 border-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plaintext\",\n            className: \"form-label text-light\",\n            children: \"Plaintext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"plaintext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to encrypt\",\n            value: plaintext,\n            onChange: e => setPlaintext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Keyword\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: encryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : \"Encrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Ciphertext:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: ciphertext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), visualization && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transposition Cipher Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Step 1: Preprocessing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Original Text:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this), \" \", visualization.steps.preprocessing.originalText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Processed Text:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this), \" \", visualization.steps.preprocessing.processedText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Keyword:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this), \" \", visualization.steps.preprocessing.key]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Column Order:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), \" \", visualization.steps.preprocessing.columnOrder.join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Step 2: Matrix Creation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Matrix Dimensions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this), \" \", visualization.steps.matrix.numRows, \" rows \\xD7\", \" \", visualization.steps.matrix.numCols, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), visualization.isDecryption && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Column Lengths:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 25\n                }, this), \" \", visualization.steps.matrix.columnLengths.join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"matrix-visualization\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-header\",\n                  children: visualization.columnOrder.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"matrix-cell header\",\n                    children: visualization.key[index]\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 23\n                }, this), visualization.matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matrix-row\",\n                  children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"matrix-cell\",\n                    children: cell === \"_\" ? \" _\" : cell\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 29\n                  }, this))\n                }, rowIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Step 3: Text Transformation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Reading Order:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this), \" \", visualization.steps.transformation.readingOrder.join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Reading Direction:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 23\n                }, this), \" \", visualization.isDecryption ? \"Row-wise\" : \"Column-wise\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Result:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 23\n                }, this), \" \", visualization.isDecryption ? visualization.steps.transformation.plaintext : visualization.steps.transformation.ciphertext]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"visualization-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Original length: \", visualization.originalLength, \" characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Padded length: \", visualization.paddedLength, \" characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Keyword: \", visualization.key]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Note: Spaces are replaced with underscores (_) for clarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-warning\",\n          children: \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ciphertext\",\n            className: \"form-label text-light\",\n            children: \"Ciphertext\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ciphertext\",\n            className: \"form-control\",\n            placeholder: \"Enter text to decrypt\",\n            value: ciphertext,\n            onChange: e => setCiphertext(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Key (text)\",\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: generateKey,\n            children: \"\\uD83D\\uDD10 Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: decryptText,\n          disabled: isProcessing,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"me-2\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : \"Decrypt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label text-light\",\n            children: \"Decrypted Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-dark rounded\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-light\",\n              children: decryptedText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), activeTab === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Key (text)\",\n          value: key,\n          onChange: e => setKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: generateKey,\n          children: \"\\uD83D\\uDD10 Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: encryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), \"Encrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          onClick: decryptFile,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"me-2\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), \"Decrypt File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress my-3 w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-striped progress-bar-animated bg-success\",\n          style: {\n            width: `${downloadProgress}%`\n          },\n          children: [downloadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }, this), fileResult && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileResult.url,\n        className: \"btn btn-primary mt-3\",\n        download: fileResult.filename,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"me-2\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }, this), \"Download Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .step-container {\n          margin-bottom: 2rem;\n          padding: 1rem;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .step-content {\n          margin-top: 1rem;\n        }\n        .matrix-visualization {\n          margin: 1rem 0;\n        }\n        .matrix-header {\n          display: flex;\n          margin-bottom: 0.5rem;\n        }\n        .matrix-row {\n          display: flex;\n        }\n        .matrix-cell {\n          width: 2rem;\n          height: 2rem;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: 1px solid #ddd;\n          margin: 0.1rem;\n        }\n        .matrix-cell.header {\n          font-weight: bold;\n          background-color: #f0f0f0;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s(TranspositionPage, \"J0gfUDvHmItKeXiC2d+tBz8G6EE=\");\n_c = TranspositionPage;\nvar _c;\n$RefreshReg$(_c, \"TranspositionPage\");","map":{"version":3,"names":["useState","axios","Loader2","FileText","Download","jsxDEV","_jsxDEV","Fragment","_Fragment","TranspositionPage","_s","activeTab","setActiveTab","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decryptedText","setDecryptedText","error","setError","isLoading","setIsLoading","file","setFile","fileResult","setFileResult","downloadProgress","setDownloadProgress","isDownloading","setIsDownloading","visualization","setVisualization","isProcessing","setIsProcessing","validateInputs","trim","test","uniqueChars","Set","toUpperCase","split","size","encryptText","response","fetch","method","headers","body","JSON","stringify","data","json","ok","numRows","Math","ceil","paddedLength","columnOrder","length","matrix","Array","fill","map","index","row","col","originalLength","isEncryption","steps","preprocessing","originalText","processedText","paddedText","numCols","transformation","readingOrder","err","decryptText","isDecryption","columnLengths","generateKey","characters","floor","random","keyword","firstChar","charAt","secondChar","i","handleFileUpload","e","target","files","encryptFile","formData","FormData","append","res","post","responseType","onDownloadProgress","progressEvent","percent","round","loaded","total","blob","Blob","type","url","URL","createObjectURL","filename","name","decryptFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","htmlFor","id","placeholder","value","onChange","rows","disabled","join","order","rowIndex","cell","colIndex","style","width","href","download","jsx","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/VS Code/CryptographyWebApp/frontend/src/TranspositionPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { Loader2, FileText, Download } from \"lucide-react\";\n\nexport default function TranspositionPage() {\n  const [activeTab, setActiveTab] = useState(\"text\");\n  const [plaintext, setPlaintext] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [ciphertext, setCiphertext] = useState(\"\");\n  const [decryptedText, setDecryptedText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  const [fileResult, setFileResult] = useState(\"\");\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [visualization, setVisualization] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const validateInputs = () => {\n    if (!plaintext.trim() && !file) {\n      setError(\"Please enter text or upload a file\");\n      return false;\n    }\n    if (!key.trim()) {\n      setError(\"Please enter a keyword\");\n      return false;\n    }\n    if (!/^[a-zA-Z]+$/.test(key)) {\n      setError(\"Keyword must contain only letters\");\n      return false;\n    }\n    const uniqueChars = new Set(key.toUpperCase().split(\"\"));\n    if (uniqueChars.size < 2) {\n      setError(\"Keyword must have at least 2 unique letters\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n\n  const encryptText = async () => {\n    if (!validateInputs()) return;\n\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\n        \"http://localhost:5000/encrypt/transposition\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ plaintext, key }),\n        }\n      );\n\n      const data = await response.json();\n      if (response.ok) {\n        setCiphertext(data.ciphertext);\n        setError(\"\");\n\n        // Create visualization\n        const numRows = Math.ceil(data.paddedLength / data.columnOrder.length);\n        const matrix = Array(numRows)\n          .fill()\n          .map(() => Array(data.columnOrder.length).fill(\"_\"));\n        let index = 0;\n\n        // Fill the matrix row by row\n        for (let row = 0; row < numRows; row++) {\n          for (let col = 0; col < data.columnOrder.length; col++) {\n            if (index < plaintext.length) {\n              matrix[row][col] = plaintext[index++];\n            }\n          }\n        }\n\n        setVisualization({\n          matrix,\n          columnOrder: data.columnOrder,\n          originalLength: data.originalLength,\n          paddedLength: data.paddedLength,\n          key: data.key,\n          isEncryption: true,\n          steps: {\n            preprocessing: {\n              originalText: plaintext,\n              processedText: data.paddedText,\n              key: data.key,\n              columnOrder: data.columnOrder,\n            },\n            matrix: {\n              numRows,\n              numCols: data.columnOrder.length,\n            },\n            transformation: {\n              readingOrder: data.columnOrder,\n              plaintext: data.paddedText,\n              ciphertext: data.ciphertext,\n            },\n          },\n        });\n      } else {\n        setError(data.error || \"Failed to encrypt text\");\n      }\n    } catch (err) {\n      setError(\n        \"Failed to encrypt text. Please check your input and try again.\"\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const decryptText = async () => {\n    if (!validateInputs()) return;\n\n    try {\n      setIsProcessing(true);\n      const response = await fetch(\n        \"http://localhost:5000/decrypt/transposition\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ ciphertext, key }),\n        }\n      );\n\n      const data = await response.json();\n      if (response.ok) {\n        setDecryptedText(data.plaintext);\n        setError(\"\");\n\n        // Create visualization for decryption\n        setVisualization({\n          matrix: data.steps.matrix.matrix,\n          columnOrder: data.steps.preprocessing.columnOrder,\n          originalLength: ciphertext.length,\n          paddedLength: ciphertext.length,\n          key: data.key,\n          isDecryption: true,\n          steps: {\n            preprocessing: {\n              ciphertext: ciphertext,\n              key: data.key,\n              columnOrder: data.steps.preprocessing.columnOrder,\n            },\n            matrix: {\n              numRows: data.steps.matrix.numRows,\n              numCols: data.steps.matrix.numCols,\n              matrix: data.steps.matrix.matrix,\n              columnLengths: data.steps.matrix.columnLengths,\n            },\n            transformation: {\n              readingOrder: data.steps.transformation.readingOrder,\n              plaintext: data.plaintext,\n            },\n          },\n        });\n      } else {\n        setError(data.error || \"Failed to decrypt text\");\n      }\n    } catch (err) {\n      setError(\n        \"Failed to decrypt text. Please check your input and try again.\"\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const generateKey = () => {\n    // Generate a random keyword with at least 2 unique characters\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    const length = Math.floor(Math.random() * 4) + 3; // Random length between 3 and 6\n    let keyword = \"\";\n\n    // Ensure at least 2 unique characters\n    const firstChar = characters.charAt(\n      Math.floor(Math.random() * characters.length)\n    );\n    const secondChar = characters.charAt(\n      Math.floor(Math.random() * characters.length)\n    );\n    keyword = firstChar + secondChar;\n\n    // Add remaining characters\n    for (let i = 2; i < length; i++) {\n      keyword += characters.charAt(\n        Math.floor(Math.random() * characters.length)\n      );\n    }\n\n    setKey(keyword);\n    setError(\"\");\n  };\n\n  const handleFileUpload = (e) => setFile(e.target.files[0]);\n\n  const encryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n\n      const res = await axios.post(\n        \"http://localhost:5000/encrypt-file/transposition\",\n        formData,\n        {\n          responseType: \"blob\",\n          onDownloadProgress: (progressEvent) => {\n            const percent = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setDownloadProgress(percent);\n          },\n        }\n      );\n\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\n      const url = URL.createObjectURL(blob);\n      setFileResult({ url, filename: \"encrypted_\" + file.name });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File encryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n\n  const decryptFile = async () => {\n    if (!file || !key) return setError(\"Select a file and enter a key.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"key\", key);\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n\n      const res = await axios.post(\n        \"http://localhost:5000/decrypt-file/transposition\",\n        formData,\n        {\n          responseType: \"blob\",\n          onDownloadProgress: (progressEvent) => {\n            const percent = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setDownloadProgress(percent);\n          },\n        }\n      );\n\n      const blob = new Blob([res.data], { type: res.headers[\"content-type\"] });\n      const url = URL.createObjectURL(blob);\n      setFileResult({ url, filename: \"decrypted_\" + file.name });\n      setError(\"\");\n    } catch (err) {\n      setError(\"File decryption failed.\");\n    } finally {\n      setIsDownloading(false);\n      setDownloadProgress(0);\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h1>Transposition Cipher</h1>\n      <p className=\"description\">\n        The Transposition Cipher rearranges the letters of the plaintext\n        according to a keyword. The process consists of three steps:\n        preprocessing, matrix creation, and text transformation.\n      </p>\n\n      <div className=\"d-flex justify-content-center mb-4\">\n        <div className=\"btn-group\">\n          <button\n            className={`btn ${\n              activeTab === \"text\" ? \"btn-success\" : \"btn-outline-success\"\n            }`}\n            onClick={() => setActiveTab(\"text\")}\n          >\n            Text Encryption\n          </button>\n          <button\n            className={`btn ${\n              activeTab === \"file\" ? \"btn-success\" : \"btn-outline-success\"\n            }`}\n            onClick={() => setActiveTab(\"file\")}\n          >\n            File Encryption\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div\n          className=\"alert alert-danger alert-dismissible fade show\"\n          role=\"alert\"\n        >\n          {error}\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            onClick={() => setError(\"\")}\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      )}\n\n      {activeTab === \"text\" && (\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 border-end\">\n            <h4 className=\"text-success\">Encrypt</h4>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"plaintext\" className=\"form-label text-light\">\n                Plaintext\n              </label>\n              <textarea\n                id=\"plaintext\"\n                className=\"form-control\"\n                placeholder=\"Enter text to encrypt\"\n                value={plaintext}\n                onChange={(e) => setPlaintext(e.target.value)}\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Keyword\"\n                value={key}\n                onChange={(e) => setKey(e.target.value)}\n              />\n              <button className=\"btn btn-success\" onClick={generateKey}>\n                🔐 Generate\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-success\"\n              onClick={encryptText}\n              disabled={isProcessing}\n            >\n              {isProcessing ? (\n                <>\n                  <Loader2 className=\"me-2\" size={20} />\n                  Encrypting...\n                </>\n              ) : (\n                \"Encrypt\"\n              )}\n            </button>\n            <div className=\"mt-3\">\n              <label className=\"form-label text-light\">Ciphertext:</label>\n              <div className=\"p-2 bg-dark rounded\">\n                <code className=\"text-light\">{ciphertext}</code>\n              </div>\n            </div>\n\n            {visualization && (\n              <div className=\"visualization-container\">\n                <h3>Transposition Cipher Process</h3>\n\n                {/* Step 1: Preprocessing */}\n                <div className=\"step-container\">\n                  <h4>Step 1: Preprocessing</h4>\n                  <div className=\"step-content\">\n                    <p>\n                      <strong>Original Text:</strong>{\" \"}\n                      {visualization.steps.preprocessing.originalText}\n                    </p>\n                    <p>\n                      <strong>Processed Text:</strong>{\" \"}\n                      {visualization.steps.preprocessing.processedText}\n                    </p>\n                    <p>\n                      <strong>Keyword:</strong>{\" \"}\n                      {visualization.steps.preprocessing.key}\n                    </p>\n                    <p>\n                      <strong>Column Order:</strong>{\" \"}\n                      {visualization.steps.preprocessing.columnOrder.join(\", \")}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Step 2: Matrix Creation */}\n                <div className=\"step-container\">\n                  <h4>Step 2: Matrix Creation</h4>\n                  <div className=\"step-content\">\n                    <p>\n                      <strong>Matrix Dimensions:</strong>{\" \"}\n                      {visualization.steps.matrix.numRows} rows ×{\" \"}\n                      {visualization.steps.matrix.numCols} columns\n                    </p>\n                    {visualization.isDecryption && (\n                      <p>\n                        <strong>Column Lengths:</strong>{\" \"}\n                        {visualization.steps.matrix.columnLengths.join(\", \")}\n                      </p>\n                    )}\n                    <div className=\"matrix-visualization\">\n                      <div className=\"matrix-header\">\n                        {visualization.columnOrder.map((order, index) => (\n                          <div key={index} className=\"matrix-cell header\">\n                            {visualization.key[index]}\n                          </div>\n                        ))}\n                      </div>\n                      {visualization.matrix.map((row, rowIndex) => (\n                        <div key={rowIndex} className=\"matrix-row\">\n                          {row.map((cell, colIndex) => (\n                            <div key={colIndex} className=\"matrix-cell\">\n                              {cell === \"_\" ? \" _\" : cell}\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Step 3: Text Transformation */}\n                <div className=\"step-container\">\n                  <h4>Step 3: Text Transformation</h4>\n                  <div className=\"step-content\">\n                    <p>\n                      <strong>Reading Order:</strong>{\" \"}\n                      {visualization.steps.transformation.readingOrder.join(\n                        \", \"\n                      )}\n                    </p>\n                    <p>\n                      <strong>Reading Direction:</strong>{\" \"}\n                      {visualization.isDecryption ? \"Row-wise\" : \"Column-wise\"}\n                    </p>\n                    <p>\n                      <strong>Result:</strong>{\" \"}\n                      {visualization.isDecryption\n                        ? visualization.steps.transformation.plaintext\n                        : visualization.steps.transformation.ciphertext}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"visualization-info\">\n                  <p>\n                    Original length: {visualization.originalLength} characters\n                  </p>\n                  <p>Padded length: {visualization.paddedLength} characters</p>\n                  <p>Keyword: {visualization.key}</p>\n                  <p>\n                    Note: Spaces are replaced with underscores (_) for clarity\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"col-md-6\">\n            <h4 className=\"text-warning\">Decrypt</h4>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"ciphertext\" className=\"form-label text-light\">\n                Ciphertext\n              </label>\n              <textarea\n                id=\"ciphertext\"\n                className=\"form-control\"\n                placeholder=\"Enter text to decrypt\"\n                value={ciphertext}\n                onChange={(e) => setCiphertext(e.target.value)}\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Key (text)\"\n                value={key}\n                onChange={(e) => setKey(e.target.value)}\n              />\n              <button className=\"btn btn-success\" onClick={generateKey}>\n                🔐 Generate\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-warning\"\n              onClick={decryptText}\n              disabled={isProcessing}\n            >\n              {isProcessing ? (\n                <>\n                  <Loader2 className=\"me-2\" size={20} />\n                  Decrypting...\n                </>\n              ) : (\n                \"Decrypt\"\n              )}\n            </button>\n            <div className=\"mt-3\">\n              <label className=\"form-label text-light\">Decrypted Text:</label>\n              <div className=\"p-2 bg-dark rounded\">\n                <code className=\"text-light\">{decryptedText}</code>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeTab === \"file\" && (\n        <div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              onChange={handleFileUpload}\n            />\n          </div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Key (text)\"\n              value={key}\n              onChange={(e) => setKey(e.target.value)}\n            />\n            <button className=\"btn btn-success\" onClick={generateKey}>\n              🔐 Generate\n            </button>\n          </div>\n          <div className=\"d-flex gap-2\">\n            <button className=\"btn btn-outline-success\" onClick={encryptFile}>\n              <FileText className=\"me-2\" size={20} />\n              Encrypt File\n            </button>\n            <button className=\"btn btn-outline-warning\" onClick={decryptFile}>\n              <FileText className=\"me-2\" size={20} />\n              Decrypt File\n            </button>\n          </div>\n          {isDownloading && (\n            <div className=\"progress my-3 w-100\">\n              <div\n                className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                style={{ width: `${downloadProgress}%` }}\n              >\n                {downloadProgress}%\n              </div>\n            </div>\n          )}\n          {fileResult && (\n            <a\n              href={fileResult.url}\n              className=\"btn btn-primary mt-3\"\n              download={fileResult.filename}\n            >\n              <Download className=\"me-2\" size={20} />\n              Download Result\n            </a>\n          )}\n        </div>\n      )}\n\n      <style jsx>{`\n        .step-container {\n          margin-bottom: 2rem;\n          padding: 1rem;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n        }\n        .step-content {\n          margin-top: 1rem;\n        }\n        .matrix-visualization {\n          margin: 1rem 0;\n        }\n        .matrix-header {\n          display: flex;\n          margin-bottom: 0.5rem;\n        }\n        .matrix-row {\n          display: flex;\n        }\n        .matrix-cell {\n          width: 2rem;\n          height: 2rem;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: 1px solid #ddd;\n          margin: 0.1rem;\n        }\n        .matrix-cell.header {\n          font-weight: bold;\n          background-color: #f0f0f0;\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
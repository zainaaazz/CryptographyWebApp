{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaina\\\\Desktop\\\\websites\\\\CryptographyWebApp\\\\frontend\\\\src\\\\CaesarPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CaesarPage() {\n  _s();\n  const [plaintext, setPlaintext] = useState('');\n  const [shift, setShift] = useState(3);\n  const [ciphertext, setCiphertext] = useState('');\n  const encrypt = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/encrypt/caesar', {\n        plaintext,\n        shift: parseInt(shift)\n      });\n      setCiphertext(response.data.ciphertext);\n    } catch (err) {\n      setCiphertext('Encryption failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Caesar Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-3\",\n      placeholder: \"Enter plaintext\",\n      value: plaintext,\n      onChange: e => setPlaintext(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-3\",\n      type: \"number\",\n      placeholder: \"Shift amount\",\n      value: shift,\n      onChange: e => setShift(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      onClick: encrypt,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ciphertext:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: ciphertext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CaesarPage, \"c67pHjfobpBIUu6WaMUVvR+rM8A=\");\n_c = CaesarPage;\nvar _c;\n$RefreshReg$(_c, \"CaesarPage\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","CaesarPage","_s","plaintext","setPlaintext","shift","setShift","ciphertext","setCiphertext","encrypt","response","post","parseInt","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zaina/Desktop/websites/CryptographyWebApp/frontend/src/CaesarPage.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nexport default function CaesarPage() {\n  const [plaintext, setPlaintext] = useState('');\n  const [shift, setShift] = useState(3);\n  const [ciphertext, setCiphertext] = useState('');\n\n  const encrypt = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/encrypt/caesar', {\n        plaintext,\n        shift: parseInt(shift)\n      });\n      setCiphertext(response.data.ciphertext);\n    } catch (err) {\n      setCiphertext('Encryption failed');\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Caesar Cipher</h2>\n      <input className=\"form-control mb-3\" placeholder=\"Enter plaintext\" value={plaintext} onChange={e => setPlaintext(e.target.value)} />\n      <input className=\"form-control mb-3\" type=\"number\" placeholder=\"Shift amount\" value={shift} onChange={e => setShift(e.target.value)} />\n      <button className=\"btn btn-success\" onClick={encrypt}>Encrypt</button>\n      <div className=\"mt-3\"><strong>Ciphertext:</strong> <code>{ciphertext}</code></div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,sCAAsC,EAAE;QACxER,SAAS;QACTE,KAAK,EAAEO,QAAQ,CAACP,KAAK;MACvB,CAAC,CAAC;MACFG,aAAa,CAACE,QAAQ,CAACG,IAAI,CAACN,UAAU,CAAC;IACzC,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZN,aAAa,CAAC,mBAAmB,CAAC;IACpC;EACF,CAAC;EAED,oBACER,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAOe,SAAS,EAAC,mBAAmB;MAACM,WAAW,EAAC,iBAAiB;MAACC,KAAK,EAAEnB,SAAU;MAACoB,QAAQ,EAAEC,CAAC,IAAIpB,YAAY,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpIpB,OAAA;MAAOe,SAAS,EAAC,mBAAmB;MAACW,IAAI,EAAC,QAAQ;MAACL,WAAW,EAAC,cAAc;MAACC,KAAK,EAAEjB,KAAM;MAACkB,QAAQ,EAAEC,CAAC,IAAIlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvIpB,OAAA;MAAQe,SAAS,EAAC,iBAAiB;MAACY,OAAO,EAAElB,OAAQ;MAAAO,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtEpB,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAAChB,OAAA;QAAAgB,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,eAAApB,OAAA;QAAAgB,QAAA,EAAOT;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEV;AAAClB,EAAA,CA1BuBD,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaina\\\\Desktop\\\\websites\\\\CryptographyWebApp\\\\frontend\\\\src\\\\CustomPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomPage() {\n  _s();\n  const [plaintext, setPlaintext] = useState('');\n  const [key, setKey] = useState('');\n  const [ciphertext, setCiphertext] = useState('');\n  const [decrypted, setDecrypted] = useState('');\n  const encrypt = () => {\n    // Replace with your custom algorithm logic\n    const result = btoa(plaintext + key); // example: base64 + key (toy)\n    setCiphertext(result);\n  };\n  const decrypt = () => {\n    // Replace with your custom decryption logic\n    const raw = atob(ciphertext);\n    setDecrypted(raw.replace(key, '')); // simple reversal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Custom Encryption Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Plaintext\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: plaintext,\n        onChange: e => setPlaintext(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: key,\n        onChange: e => setKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success me-2\",\n      onClick: encrypt,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: decrypt,\n      children: \"Decrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ciphertext:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: ciphertext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Decrypted:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: decrypted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomPage, \"FbeMgvk5knEMo5vUpcKgRbRLsxo=\");\n_c = CustomPage;\nvar _c;\n$RefreshReg$(_c, \"CustomPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CustomPage","_s","plaintext","setPlaintext","key","setKey","ciphertext","setCiphertext","decrypted","setDecrypted","encrypt","result","btoa","decrypt","raw","atob","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zaina/Desktop/websites/CryptographyWebApp/frontend/src/CustomPage.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function CustomPage() {\r\n  const [plaintext, setPlaintext] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [ciphertext, setCiphertext] = useState('');\r\n  const [decrypted, setDecrypted] = useState('');\r\n\r\n  const encrypt = () => {\r\n    // Replace with your custom algorithm logic\r\n    const result = btoa(plaintext + key); // example: base64 + key (toy)\r\n    setCiphertext(result);\r\n  };\r\n\r\n  const decrypt = () => {\r\n    // Replace with your custom decryption logic\r\n    const raw = atob(ciphertext);\r\n    setDecrypted(raw.replace(key, '')); // simple reversal\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4 text-white\">\r\n      <h1 className=\"text-center\">Custom Encryption Algorithm</h1>\r\n\r\n      <div className=\"mb-3\">\r\n        <label>Plaintext</label>\r\n        <input className=\"form-control\" value={plaintext} onChange={e => setPlaintext(e.target.value)} />\r\n      </div>\r\n\r\n      <div className=\"mb-3\">\r\n        <label>Key</label>\r\n        <input className=\"form-control\" value={key} onChange={e => setKey(e.target.value)} />\r\n      </div>\r\n\r\n      <button className=\"btn btn-success me-2\" onClick={encrypt}>Encrypt</button>\r\n      <button className=\"btn btn-warning\" onClick={decrypt}>Decrypt</button>\r\n\r\n      <div className=\"mt-4\">\r\n        <p><strong>Ciphertext:</strong> <code>{ciphertext}</code></p>\r\n        <p><strong>Decrypted:</strong> <code>{decrypted}</code></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}